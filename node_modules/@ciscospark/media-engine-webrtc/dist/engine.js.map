{"version":3,"sources":["engine.js"],"names":["grammar","a","find","g","name","unshift","reg","DirectionContainer","targetMediaDirection","capitalize","audio","video","getTargetMediaDirection","target","kind","get","WebRTCMediaEngine","pc","localScreenShare","getTracks","length","getSenders","reduce","acc","s","track","push","getReceivers","r","constraints","finalConstraints","fake","process","env","NODE_ENV","navigator","mediaDevices","getUserMedia","attrs","options","logger","console","RTCPeerConnection","iceServers","bundlePolicy","sdpSemantics","negotiationNeeded","bandwidthLimit","audioBandwidthLimit","videoBandwidthLimit","parent","nextTick","onnegotiationneeded","info","answerSdp","triggerNegotiationNeeded","ontrack","event","trigger","stream","remoteMediaStream","MediaStream","streams","forEach","includes","addTrack","onended","removeTrack","undefined","err","needsIce","iceGatheringState","sdp","localDescription","directionKey","media","m","type","icePromise","resolve","onicecandidate","candidate","td","wantsVideo","_prepareIceGatherer","gumming","_getUserMedia","then","offerOptions","offerToReceiveAudio","offerToReceiveVideo","audioDirection","videoDirection","screenDirection","updateLocalMediaToTargetDirection","createOffer","offer","setLocalDescription","streamId","id","getVideoTracks","trackId","msid","sections","split","join","offerSdp","debug","defaultCodecParams","newCodecParams","newSdp","replace","signalingState","setRemoteDescription","RTCSessionDescription","sendingAudio","sendingVideo","direction","isSending","senders","filter","localTracks","localMediaStream","t","enabled","_setNewMediaConstraint","sender","bowser","firefox","addOrReplaceTrack","constraint","trackOrConstraint","set","mediaSource","width","min","max","height","frameRate","senderTrack","stop","_setScreenShare","Error","MediaStreamTrack","_setNewMediaTrack","_setNewMediaDirection","shouldRecv","receivers","unpauseReceivingMedia","pauseReceivingMedia","screen","all","userStream","screenStream","p","getAudioTracks","replaceTrack","catch","reject","existingTrack","e","warn","targetDirection","shouldSend","close","ended","off","evented","nonenumerable","oneFlight","prototype","Events"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA;AACA;AACA,IAAI,CAACA,kBAAQC,CAAR,CAAUC,IAAV,CAAe,UAACC,CAAD;AAAA,SAAOA,EAAEC,IAAF,KAAW,SAAlB;AAAA,CAAf,CAAL,EAAkD;AAChDJ,oBAAQC,CAAR,CAAUI,OAAV,CAAkB;AAChB;AACA;AACAD,UAAM,SAHU;AAIhB;AACAE,SAAK;AALW,GAAlB;AAOD;;AAED,IAAMC,qBAAqB,mDAA3B;AACA,IAAMC,uBAAuB,IAAID,kBAAJ,EAA7B;;AAEA,IAAME,aAAa;AACjBC,SAAO,OADU;AAEjBC,SAAO;AAFU,CAAnB;;AAKA;;;;;;;;AAQA,SAASC,uBAAT,CAAiCC,MAAjC,EAAyCC,IAAzC,EAA+C;AAC7C,SAAON,qBAAqBO,GAArB,CAAyBF,MAAzB,EAAiCC,IAAjC,KAA0C,UAAjD;AACD;;AAED;;;;IAIqBE,iB,WA4mBlB,2BAAc,SAAd,C,UAkSA,gCAAS,GAAT,C;;;;;AArzBD;;;;wBAIqB;AACnB,aAAO,gDAA4B,OAA5B,EAAqC,KAAKC,EAA1C,CAAP;AACD;;AAED;;;;;;;wBAIqB;AACnB,aAAO,gDAA4B,OAA5B,EAAqC,KAAKA,EAA1C,CAAP;AACD;;AAED;;;;;;;wBAIsB;AACpB,aAAQ,CAAC,KAAKC,gBAAN,IAA0B,KAAKA,gBAAL,CAAsBC,SAAtB,GAAkCC,MAAlC,KAA6C,CAAxE,GAA6E,UAA7E,GAA0F,UAAjG;AACD;;AAED;;;;;;;wBAImB;AACjB,aAAO,KAAKH,EAAL,CAAQI,UAAR,GAAqBC,MAArB,CAA4B,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC7C,YAAIA,EAAEC,KAAN,EAAa;AACXF,cAAIG,IAAJ,CAASF,EAAEC,KAAX;AACD;AACD,eAAOF,GAAP;AACD,OALM,EAKJ,EALI,CAAP;AAMD;;AAED;;;;;;;wBAIqB;AACnB,aAAO,KAAKN,EAAL,CAAQU,YAAR,GAAuBL,MAAvB,CAA8B,UAACC,GAAD,EAAMK,CAAN,EAAY;AAC/C,YAAIA,EAAEH,KAAN,EAAa;AACXF,cAAIG,IAAJ,CAASE,EAAEH,KAAX;AACD;AACD,eAAOF,GAAP;AACD,OALM,EAKJ,EALI,CAAP;AAMD;;AAED;;;;;;;;;;;AA1IA;;;;;;iCAMoBM,W,EAAa;AAC/B,UAAMC,mBAAmB,wBAAS,EAAT,EAAaD,WAAb,EAA0B,EAACE,MAAMC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAAhC,EAA1B,CAAzB;AACA,aAAOC,UAAUC,YAAV,CAAuBC,YAAvB,CAAoCP,gBAApC,CAAP;AACD;AAKD;;;;;;AAQA;;;;;;AAQA;;;;;;AAMA;;;;;;;;;;;AAiBA;;;;;AAOA;;;;;;;AAqFA,+BAAsC;AAAA;;AAAA,QAA1BQ,KAA0B,uEAAlB,EAAkB;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAAA;AAAA,SAtItCC,MAsIsC,GAtI7BC,OAsI6B;;AAAA;;AAAA;;AAAA;;AAAA,SAnGtCxB,EAmGsC,GAnGjC,IAAIyB,iBAAJ,CAAsB;AACzBC,kBAAY,EADa;AAEzBC,oBAAc,YAFW;AAGzBC,oBAAc;AAHW,KAAtB,CAmGiC;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAhEtCC,iBAgEsC,GAhElB,KAgEkB;AAAA,SA9DtCC,cA8DsC,GA9DrB;AACfC,2BAAqB,KADN;AAEfC,2BAAqB;AAFN,KA8DqB;;AAAA;;AAAA;;AAAA;;AACpC,QAAIV,QAAQW,MAAZ,EAAoB;AAClB;AACAlB,cAAQmB,QAAR,CAAiB,YAAM;AACrB,YAAIZ,QAAQW,MAAR,CAAeV,MAAnB,EAA2B;AACzB,gBAAKA,MAAL,GAAcD,QAAQW,MAAR,CAAeV,MAA7B;AACD;AACF,OAJD;AAKD,KAPD,MAQK,IAAIF,MAAME,MAAV,EAAkB;AACrB,WAAKA,MAAL,GAAcF,MAAME,MAApB;AACD;;AAED,SAAKvB,EAAL,CAAQmC,mBAAR,GAA8B,YAAM;AAClC,YAAKZ,MAAL,CAAYa,IAAZ,CAAiB,2CAAjB;AACA,UAAI,MAAKC,SAAL,IAAkB,CAAC,MAAKR,iBAA5B,EAA+C;AAC7C,cAAKA,iBAAL,GAAyB,IAAzB;AACA,cAAKS,wBAAL;AACD;AACF,KAND;;AAQA;AACA;AACA,SAAKtC,EAAL,CAAQuC,OAAR,GAAkB,UAACC,KAAD,EAAW;AAC3B,YAAKjB,MAAL,CAAYa,IAAZ,CAAiB,0DAAjB;AACA,YAAKK,OAAL,CAAa,OAAb;AACA,UAAMC,SAAS,MAAKC,iBAAL,IAA0B,IAAIC,WAAJ,EAAzC;AACAJ,YAAMK,OAAN,CAAc,CAAd,EACG3C,SADH,GAEG4C,OAFH,CAEW,UAACtC,KAAD,EAAW;AAClB,cAAKe,MAAL,CAAYa,IAAZ,aAA2B5B,MAAMX,IAAjC;AACA,YAAI6C,UAAU,CAACA,OAAOxC,SAAP,GAAmB6C,QAAnB,CAA4BvC,KAA5B,CAAf,EAAmD;AACjDkC,iBAAOM,QAAP,CAAgBxC,KAAhB;AACD;AACDA,cAAMyC,OAAN,GAAgB,YAAM;AACpB,gBAAK1B,MAAL,CAAYa,IAAZ,aAA2B5B,MAAMX,IAAjC;AACA6C,iBAAOQ,WAAP,CAAmB1C,KAAnB;AACAA,gBAAMyC,OAAN,GAAgBE,SAAhB;AACA,cAAI;AACF,gCAAiB3D,WAAWgB,MAAMX,IAAjB,CAAjB,IAA6C,gDAA4BW,MAAMX,IAAlC,EAAwC,MAAKG,EAA7C,EAAiD+C,QAAjD,CAA0D,MAA1D,CAA7C;AACD,WAFD,CAGA,OAAOK,GAAP,EAAY;AACV,gCAAiB5D,WAAWgB,MAAMX,IAAjB,CAAjB,IAA6C,KAA7C;AACD;AACF,SAVD;;AAYA,4BAAiBL,WAAWgB,MAAMX,IAAjB,CAAjB,IAA6C,gDAA4BW,MAAMX,IAAlC,EAAwC,MAAKG,EAA7C,EAAiD+C,QAAjD,CAA0D,MAA1D,CAA7C;AACD,OApBH;AAqBA,YAAKJ,iBAAL,GAAyBD,MAAzB;AACA,YAAKD,OAAL,CAAa,qBAAb;AACD,KA3BD;AA4BD;;AAED;AACA;;;;;;;;;0CAKsB;AAAA;;AACpB,UAAIY,WAAW,KAAf;AACA,UAAI,KAAKrD,EAAL,CAAQsD,iBAAR,KAA8B,KAAlC,EAAyC;AACvC,aAAK/B,MAAL,CAAYa,IAAZ,CAAiB,6EAAjB;AACAiB,mBAAW,IAAX;AACD,OAHD,MAIK;AACH,YAAME,MAAM,yBAAM,KAAKvD,EAAL,CAAQwD,gBAAR,CAAyBD,GAA/B,CAAZ;AACA,SACE,OADF,EAEE,OAFF,EAGE,QAHF,EAIET,OAJF,CAIU,UAACjD,IAAD,EAAU;AAClB,cAAM4D,eAAkB5D,IAAlB,cAAN;AACA,cAAI,OAAK4D,YAAL,MAAuB,UAAvB,IACC9D,wBAAwB,MAAxB,EAA8BE,IAA9B,MAAwC,OAAK4D,YAAL,CAAxC,IACA9D,wBAAwB,MAAxB,EAA8BE,IAA9B,MAAwC,UAF7C,EAEyD;AACvD,gBAAM6D,QAAQH,IAAIG,KAAJ,CAAUzE,IAAV,CAAe,UAAC0E,CAAD;AAAA,qBAAOA,EAAEC,IAAF,KAAW/D,IAAlB;AAAA,aAAf,CAAd;AACA,gBAAI6D,KAAJ,EAAW;AACT,qBAAKnC,MAAL,CAAYa,IAAZ,CAAoBvC,IAApB;AACD,aAFD,MAGK;AACH,qBAAK0B,MAAL,CAAYa,IAAZ,oBAAkCvC,IAAlC;AACAwD,yBAAW,IAAX;AACD;AACF;AACF,SAlBD;AAmBD;;AAED,UAAIQ,mBAAJ;AACA,UAAIR,QAAJ,EAAc;AACZQ,qBAAa,sBAAY,UAACC,OAAD,EAAa;AACpC,iBAAKvC,MAAL,CAAYa,IAAZ,CAAiB,2BAAjB;AACA,iBAAKpC,EAAL,CAAQ+D,cAAR,GAAyB,UAACvB,KAAD,EAAW;AAClC,gBAAI,CAACA,MAAMwB,SAAX,EAAsB;AACpB,qBAAKzC,MAAL,CAAYa,IAAZ,CAAiB,wBAAjB;AACA,qBAAKpC,EAAL,CAAQ+D,cAAR,GAAyBZ,SAAzB;AACAW;AACA;AACD;;AAED,mBAAKvC,MAAL,CAAYa,IAAZ,CAAiB,mBAAjB;AACD,WATD;AAUD,SAZY,CAAb;AAaD;;AAED,aAAOyB,UAAP;AACD;;AAED;;AAEA;;;;;;;kCAIc;AAAA;;AACZ,WAAKtC,MAAL,CAAYa,IAAZ,CAAiB,uBAAjB;;AAEA,UAAM6B,KAAKtE,wBAAwB,IAAxB,EAA8B,OAA9B,CAAX;AACA,UAAMuE,aAAaD,GAAGlB,QAAH,CAAY,MAAZ,KAAuBkB,GAAGlB,QAAH,CAAY,MAAZ,CAA1C;;AAEA,UAAMc,aAAa,KAAKM,mBAAL,EAAnB;;AAEA,aAAO,sBAAY,UAACL,OAAD,EAAa;AAC9B,YAAI,OAAKM,OAAT,EAAkB;AAChB,iBAAK7C,MAAL,CAAYa,IAAZ,CAAiB,2CAAjB;AACA;AACA;AACA;AACA0B,kBAAQ,OAAKO,aAAL,GACLC,IADK,CACA,iBAAI;AAAA,mBAAM,OAAK/C,MAAL,CAAYa,IAAZ,CAAiB,eAAjB,CAAN;AAAA,WAAJ,CADA,CAAR;AAEA;AACD;;AAED0B;AACD,OAZM,EAaJQ,IAbI,CAaC,iBAAI;AAAA,eAAM,OAAK/C,MAAL,CAAYa,IAAZ,CAAiB,uBAAjB,EAA0C,OAAKmC,YAA/C,CAAN;AAAA,OAAJ,CAbD,EAcJD,IAdI,CAcC,YAAM;AACV,eAAKC,YAAL,CAAkBC,mBAAlB,GAAwC,CAAC,CAAC,OAAKD,YAAL,CAAkBC,mBAA5D;AACA,eAAKD,YAAL,CAAkBE,mBAAlB,GAAwC,CAAC,CAAC,OAAKF,YAAL,CAAkBE,mBAA5D;AACA,eAAKlD,MAAL,CAAYa,IAAZ,CAAiB,qBAAjB,EAAwC,OAAKmC,YAA7C;AACA,eAAKhD,MAAL,CAAYa,IAAZ,kCAAgD,OAAKsC,cAArD;AACA,eAAKnD,MAAL,CAAYa,IAAZ,kCAAgD,OAAKuC,cAArD;AACA,eAAKpD,MAAL,CAAYa,IAAZ,mCAAiD,OAAKwC,eAAtD;;AAEA;AACA,eAAKC,iCAAL;AACA,eAAO,OAAK7E,EAAL,CAAQ8E,WAAR,CAAoB,OAAKP,YAAzB,CAAP;AACD,OAzBI,EA2BJD,IA3BI,CA2BC,iBAAI,UAACS,KAAD,EAAW;AACnBA,cAAMxB,GAAN,GAAY,kCAAc,OAAKzB,cAAnB,EAAmCiD,MAAMxB,GAAzC,CAAZ;AACAwB,cAAMxB,GAAN,GAAY,iCAAawB,MAAMxB,GAAnB,CAAZ;AACD,OAHK,CA3BD,EA+BJe,IA/BI,CA+BC,iBAAI;AAAA,eAAM,OAAK/C,MAAL,CAAYa,IAAZ,CAAiB,2BAAjB,CAAN;AAAA,OAAJ,CA/BD,EAgCJkC,IAhCI,CAgCC,UAACS,KAAD;AAAA,eAAW,OAAK/E,EAAL,CAAQgF,mBAAR,CAA4BD,KAA5B,CAAX;AAAA,OAhCD,EAiCJT,IAjCI,CAiCC,iBAAI;AAAA,eAAMT,cAAc,OAAKtC,MAAL,CAAYa,IAAZ,CAAiB,4BAAjB,CAApB;AAAA,OAAJ,CAjCD,EAkCJkC,IAlCI,CAkCC;AAAA,eAAMT,UAAN;AAAA,OAlCD,EAmCJS,IAnCI,CAmCC,iBAAI;AAAA,eAAM,OAAK/C,MAAL,CAAYa,IAAZ,CAAiB,mBAAjB,CAAN;AAAA,OAAJ,CAnCD,EAoCJkC,IApCI,CAoCC;AAAA,eAAM,kCAAc,OAAKxC,cAAnB,EAAmC,OAAK9B,EAAL,CAAQwD,gBAAR,CAAyBD,GAA5D,CAAN;AAAA,OApCD,EAqCJe,IArCI,CAqCC,iBAAI;AAAA,eAAMJ,cAAc,OAAK3C,MAAL,CAAYa,IAAZ,CAAiB,uBAAjB,CAApB;AAAA,OAAJ,CArCD,EAsCJkC,IAtCI,CAsCC,+BAAWJ,UAAX,CAtCD,EAuCJI,IAvCI,CAuCC,UAACf,GAAD,EAAS;AACb,YAAI,OAAKtD,gBAAT,EAA2B;AACzB;AACA,cAAMgF,WAAW,OAAKhF,gBAAL,CAAsBiF,EAAvC;AACA,cAAM1E,QAAQ,OAAKP,gBAAL,CAAsBkF,cAAtB,GAAuC,CAAvC,CAAd;AACA,cAAI3E,KAAJ,EAAW;AACT,gBAAM4E,UAAU5E,MAAM0E,EAAtB;AACA,gBAAMG,OAAUJ,QAAV,SAAsBG,OAA5B;AACA,gBAAME,WAAW/B,IAAIgC,KAAJ,CAAUF,IAAV,CAAjB;AACA,gBAAIC,SAAS,CAAT,CAAJ,EAAiB;AACfA,uBAAS,CAAT,6BAAqCA,SAAS,CAAT,CAArC;AACA/B,oBAAM+B,SAASE,IAAT,CAAcH,IAAd,CAAN;AACA,qBAAO9B,GAAP;AACD;AACF;;AAEDA,iBAAO,sBAAP;AACD;AACD,eAAOA,GAAP;AACD,OA1DI,EA2DJe,IA3DI,CA2DC,iBAAI,UAACf,GAAD,EAAS;AACjB,eAAKkC,QAAL,GAAgBlC,GAAhB;AACD,OAFK,CA3DD,CAAP;AA8DD;;AAED;;;;;;;;iCAKaA,G,EAAK;AAAA;;AAChB,WAAKhC,MAAL,CAAYa,IAAZ,CAAiB,kBAAjB;AACA,WAAKb,MAAL,CAAYmE,KAAZ,CAAkB,iBAAlB,EAAqCnC,GAArC;AACA;AACA;AACA;AACA,UAAMoC,qBAAqB,4BAA3B;AACA,UAAMC,iBAAiB,4BAAvB;AACA,UAAIC,SAAStC,IAAIuC,OAAJ,CAAYH,kBAAZ,EAAgCC,cAAhC,CAAb;;AAEA;AACA;AACAC,eAASA,OAAOC,OAAP,CAAe,oBAAf,EAAqC,2BAArC,CAAT;;AAEA;AACAD,eAAS,iCAAaA,MAAb,CAAT;;AAEA,WAAKtE,MAAL,CAAYmE,KAAZ,CAAkB,qBAAlB,EAAyCG,MAAzC;AACA;AACA,UAAI,KAAK7F,EAAL,CAAQ+F,cAAR,KAA2B,kBAA/B,EAAmD;AACjD,eAAO,KAAK/F,EAAL,CAAQgG,oBAAR,CAA6B,IAAIC,qBAAJ,CAA0B;AAC5D1C,eAAKsC,MADuD;AAE5DjC,gBAAM;AAFsD,SAA1B,CAA7B,EAIJU,IAJI,CAIC,YAAM;AACV,iBAAK/C,MAAL,CAAYa,IAAZ,CAAiB,iBAAjB;AACA,iBAAKC,SAAL,GAAiBwD,MAAjB;AACA,iBAAKK,YAAL,GAAoB,gDAA4B,OAA5B,EAAqC,OAAKlG,EAA1C,EAA8C+C,QAA9C,CAAuD,MAAvD,CAApB;AACA,iBAAKoD,YAAL,GAAoB,gDAA4B,OAA5B,EAAqC,OAAKnG,EAA1C,EAA8C+C,QAA9C,CAAuD,MAAvD,CAApB;;AAEA;AACA,iBAAK8B,iCAAL;AACA,iBAAKpC,OAAL,CAAa,gBAAb;AACA,iBAAKZ,iBAAL,GAAyB,KAAzB;AACD,SAdI,CAAP;AAeD;AACD,aAAO,kBAAQiC,OAAR,EAAP;AACD;AAGD;;;;;;;AASA;;;;;;;AAUA;;;;;;;;;;;AAQA;;;;;;;;0CAQsBjE,I,EAAMuG,S,EAAW;AAAA;;AACrC,WAAK7E,MAAL,CAAYa,IAAZ,cAA4BvC,IAA5B,sBAAiDuG,SAAjD;AACA,UAAMC,YAAYD,UAAUrD,QAAV,CAAmB,MAAnB,CAAlB;AACA,WAAKnC,WAAL,CAAiBf,IAAjB,IAAyBwG,SAAzB;;AAEA,UAAIA,SAAJ,EAAe;AACb,YAAMC,UAAU,KAAKtG,EAAL,CAAQI,UAAR,GAAqBmG,MAArB,CAA4B,UAAChG,CAAD;AAAA,iBAAOA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQX,IAAR,KAAiBA,IAAnC;AAAA,SAA5B,CAAhB;AACA,YAAIyG,QAAQnG,MAAR,GAAiB,CAArB,EAAwB;AACtB,eAAKoB,MAAL,CAAYa,IAAZ,wBAAsCvC,IAAtC;AACA,cAAM2G,cAAc,KAAKC,gBAAL,CAAsBvG,SAAtB,GAAkCqG,MAAlC,CAAyC,UAACG,CAAD;AAAA,mBAAOA,EAAE7G,IAAF,KAAWA,IAAlB;AAAA,WAAzC,CAApB;AACAyG,kBAAQxD,OAAR,CAAgB,UAACvC,CAAD,EAAO;AACrBA,cAAEC,KAAF,CAAQmG,OAAR,GAAkBH,YAAYzD,QAAZ,CAAqBxC,EAAEC,KAAvB,CAAlB;AACD,WAFD;AAGA,2BAAehB,WAAWK,IAAX,CAAf,IAAqCwG,SAArC;AACA,iBAAO,kBAAQvC,OAAR,EAAP;AACD;AACD,YAAI,CAAC,KAAQjE,IAAR,gBAAyBkD,QAAzB,CAAkC,MAAlC,CAAL,EAAgD;AAC9C;AACA,iBAAO,KAAK6D,sBAAL,CAA4B/G,IAA5B,EAAkCwG,SAAlC,CAAP;AACD;AACF,OAfD,MAgBK;AACH,aAAK9E,MAAL,CAAYa,IAAZ,aAA2BvC,IAA3B;AACA,YAAI,CAAC,KAAK4G,gBAAV,EAA4B;AAC1B,iBAAO,kBAAQ3C,OAAR,EAAP;AACD;AACD,eAAO,KAAK2C,gBAAL,CACJvG,SADI,GAEJqG,MAFI,CAEG,UAACG,CAAD;AAAA,iBAAOA,EAAE7G,IAAF,KAAWA,IAAlB;AAAA,SAFH,EAGJiD,OAHI,CAGI,UAACtC,KAAD,EAAW;AAClB;AACA,iBAAKe,MAAL,CAAYa,IAAZ,sBAAoCvC,IAApC;AACA,cAAMgH,SAAS,OAAK7G,EAAL,CAAQI,UAAR,GAAqBnB,IAArB,CAA0B,UAACsB,CAAD;AAAA,mBAAOA,EAAEC,KAAF,KAAYA,KAAnB;AAAA,WAA1B,CAAf;AACA,cAAI,CAACsG,iBAAOC,OAAZ,EAAqB;AACnB,mBAAKN,gBAAL,CAAsBvD,WAAtB,CAAkC1C,KAAlC;AACD;AACD,cAAIqG,MAAJ,EAAY;AACV,mBAAKtF,MAAL,CAAYa,IAAZ,sBAAoCvC,IAApC;AACAgH,mBAAOrG,KAAP,CAAamG,OAAb,GAAuB,KAAvB;AACAnG,kBAAMmG,OAAN,GAAgB,KAAhB;AACA;AACA;AACA,gBAAI,CAACG,iBAAOC,OAAZ,EAAqB;AACnB,qBAAK/G,EAAL,CAAQkD,WAAR,CAAoB2D,MAApB;AACD;AACF;AACD,iBAAKtF,MAAL,CAAYa,IAAZ,qBAAmC5C,WAAWK,IAAX,CAAnC,YAA0DwG,SAA1D;AACA,6BAAe7G,WAAWK,IAAX,CAAf,IAAqCwG,SAArC;AACD,SAtBI,CAAP;AAuBD;AACD,aAAO,kBAAQvC,OAAR,EAAP;AACD;;AAED;;;;;;;;;sCAMkBjE,I,EAAMW,K,EAAO;AAC7B,WAAKe,MAAL,CAAYa,IAAZ,kBAAgCvC,IAAhC;AACA,WAAKe,WAAL,CAAiBf,IAAjB,IAAyB,KAAzB;AACA,aAAO,KAAKmH,iBAAL,CAAuBxG,KAAvB,CAAP;AACD;;AAED;;;;;;;;;2CAMuBX,I,EAAMoH,U,EAAY;AACvC,WAAK1F,MAAL,CAAYa,IAAZ,cAA4BvC,IAA5B;AACA,WAAKe,WAAL,CAAiBf,IAAjB,IAAyBoH,UAAzB;AACA,aAAO,KAAK5C,aAAL,EAAP;AACD;;AAED;;;;;;;;;;oCAOgB+B,S,EAAWc,iB,EAAmB;AAAA;;AAC5C,WAAK3F,MAAL,CAAYa,IAAZ,CAAiB,yBAAjB;AACA7C,2BAAqB4H,GAArB,CAAyB,IAAzB,EAA+B,QAA/B,EAAyCf,SAAzC;AACA,UAAIA,UAAUrD,QAAV,CAAmB,MAAnB,CAAJ,EAAgC;AAC9B,YAAMkE,aAAa,wBAAS,EAAT,EAAaC,iBAAb,EAAgC;AACjDE,uBAAa,aADoC;AAEjDC,iBAAO;AACLC,iBAAK,KADA;AAELC,iBAAK;AAFA,WAF0C;AAMjDC,kBAAQ;AACNF,iBAAK,IADC;AAENC,iBAAK;AAFC,WANyC;AAUjDE,qBAAW;AACTH,iBAAK,GADI;AAETC,iBAAK;AAFI;AAVsC,SAAhC,CAAnB;;AAgBA,aAAKX,sBAAL,CAA4B,QAA5B,EAAsCK,UAAtC;AACA;AACD;;AAED,WAAK1F,MAAL,CAAYa,IAAZ,CAAiB,uFAAjB;AACA,WAAKpC,EAAL,CAAQI,UAAR,GACGmG,MADH,CACU,UAAChG,CAAD;AAAA,eAAOA,EAAEC,KAAF,IAAW,OAAKP,gBAAL,CAAsBC,SAAtB,GAAkC6C,QAAlC,CAA2CxC,EAAEC,KAA7C,CAAlB;AAAA,OADV,EAEGsC,OAFH,CAEW,UAACvC,CAAD,EAAO;AACd,eAAKgB,MAAL,CAAYa,IAAZ,iCAA+C7B,EAAEC,KAAF,CAAQ0E,EAAvD;AACA,YAAMwC,cAAcnH,EAAEC,KAAtB;AACAD,UAAEC,KAAF,CAAQmG,OAAR,GAAkB,KAAlB;AACA,eAAK1G,gBAAL,CAAsBiD,WAAtB,CAAkCwE,WAAlC;AACA,eAAK1H,EAAL,CAAQkD,WAAR,CAAoB3C,CAApB;AACAmH,oBAAYC,IAAZ;AACA,eAAKpG,MAAL,CAAYa,IAAZ,gCAA8CsF,YAAYxC,EAA1D;AACD,OAVH;AAWA;AACA,WAAKjF,gBAAL,GAAwB,KAAxB;AACD;;AAED;AACA;AACA;AACA;;;;;;;;;;;6BAQSJ,I,EAAMuG,S,EAAWc,iB,EAAmB;AAAA;;AAC3C,WAAK3F,MAAL,CAAYa,IAAZ,CAAiB,UAAjB;AACA,UAAIvC,SAAS,QAAb,EAAuB;AACrB,aAAK0B,MAAL,CAAYa,IAAZ,CAAiB,wCAAjB;AACA,aAAKwF,eAAL,CAAqBxB,SAArB,EAAgCc,iBAAhC;AACA,eAAO,kBAAQpD,OAAR,EAAP;AACD;;AAED,aAAO,sBAAY,UAACA,OAAD,EAAa;AAC9B,YAAIoD,iBAAJ,EAAuB;AACrB,cAAI,CAACd,UAAUrD,QAAV,CAAmB,MAAnB,CAAL,EAAiC;AAC/B,kBAAM,IAAI8E,KAAJ,qBAA4BhI,IAA5B,6DAAN;AACD;;AAED,cAAIqH,6BAA6BY,gBAAjC,EAAmD;AACjD,gBAAIZ,kBAAkBrH,IAAlB,KAA2BA,IAA/B,EAAqC;AACnC,oBAAM,IAAIgI,KAAJ,2BAAkChI,IAAlC,yBAAN;AACD;;AAEDiE,oBAAQ,OAAKiE,iBAAL,CAAuBlI,IAAvB,EAA6BqH,iBAA7B,CAAR;AACD,WAND,MAOK;AACHpD,oBAAQ,OAAK8C,sBAAL,CAA4B/G,IAA5B,EAAkCqH,iBAAlC,CAAR;AACD;AACF,SAfD,MAgBK;AACH,cAAId,cAAczG,wBAAwB,MAAxB,EAA8BE,IAA9B,CAAlB,EAAuD;AACrD,mBAAK0B,MAAL,CAAYa,IAAZ,gBAA8BvC,IAA9B,kCAA+DuG,SAA/D;AACAtC;AACD;;AAED,cAAIsC,cAAc,OAAQvG,IAAR,eAAlB,EAA4C;AAC1C,mBAAK0B,MAAL,CAAYa,IAAZ,gBAA8BvC,IAA9B,wBAAqDuG,SAArD;AACAtC;AACD;AACDA,kBAAQ,OAAKkE,qBAAL,CAA2BnI,IAA3B,EAAiCuG,SAAjC,CAAR;AACD;AACF,OA7BM,EA6BJ9B,IA7BI,CA6BC,YAAM;AACZ,YAAM2D,aAAa7B,UAAUrD,QAAV,CAAmB,MAAnB,CAAnB;;AAEA,eAAKxB,MAAL,CAAYa,IAAZ,6CAA2DvC,IAA3D,YAAsEuG,SAAtE;AACA7G,6BAAqB4H,GAArB,CAAyB,MAAzB,EAA+BtH,IAA/B,EAAqCuG,SAArC;;AAEA,eAAK7E,MAAL,CAAYa,IAAZ,kCAAgD,2CAAuBvC,IAAvB,CAAhD,YAAmFoI,UAAnF;AACA,eAAK1D,YAAL,oBAAmC,2CAAuB1E,IAAvB,CAAnC,IAAqEoI,UAArE;;AAEA,YAAMC,YAAY,OAAKlI,EAAL,CAAQU,YAAR,GAAuB6F,MAAvB,CAA8B,UAAC5F,CAAD;AAAA,iBAAOA,EAAEH,KAAF,IAAWG,EAAEH,KAAF,CAAQX,IAAR,KAAiBA,IAAnC;AAAA,SAA9B,CAAlB;;AAEA,YAAIoI,UAAJ,EAAgB;AACd,cAAIC,UAAU/H,MAAV,GAAmB,CAAvB,EAA0B;AACxB,mBAAKoB,MAAL,CAAYa,IAAZ,2CAAyDvC,IAAzD;AACA,mBAAKsI,qBAAL,CAA2BtI,IAA3B;AACD,WAHD,MAKA,IAAI,CAACqI,UAAU/H,MAAX,IAAqB,OAAKkC,SAA9B,EAAyC;AACvC,mBAAKd,MAAL,CAAYa,IAAZ,6BAA2CvC,IAA3C;AACA,mBAAKyC,wBAAL;AACD;AACF,SAVD,MAWK,IAAI4F,UAAU/H,MAAV,GAAmB,CAAvB,EAA0B;AAC7B,iBAAKoB,MAAL,CAAYa,IAAZ,2CAAyDvC,IAAzD;AACA,iBAAKuI,mBAAL,CAAyBvI,IAAzB;AACD;AACF,OAvDM,CAAP;AAwDD;;AAED;AACA;;;;;;;;;oCAQgB;AAAA;;AACd,WAAK0B,MAAL,CAAYa,IAAZ,CAAiB,oCAAjB;AACA,aAAO,sBAAY,UAAC0B,OAAD;AAAA,eAAa/C,QAAQmB,QAAR,CAAiB4B,OAAjB,CAAb;AAAA,OAAZ,EACJQ,IADI,CACC,YAAM;AACV,YAAI,OAAK1D,WAAL,CAAiBnB,KAAjB,KAA2B,IAA3B,IAAmC,OAAKO,EAAL,CAAQI,UAAR,GAAqBnB,IAArB,CAA0B,UAACsB,CAAD;AAAA,iBAAOA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQX,IAAR,KAAiB,OAAnC;AAAA,SAA1B,CAAvC,EAA8G;AAC5G,iBAAK0B,MAAL,CAAYa,IAAZ,CAAiB,wEAAjB;AACA,wCAAuB,OAAKxB,WAA5B,EAAyC,OAAzC;AACD;;AAED,YAAI,OAAKA,WAAL,CAAiBlB,KAAjB,KAA2B,IAA3B,IAAmC,OAAKM,EAAL,CAAQI,UAAR,GAAqBnB,IAArB,CAA0B,UAACsB,CAAD;AAAA,iBAAOA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQX,IAAR,KAAiB,OAAnC;AAAA,SAA1B,CAAvC,EAA8G;AAC5G,iBAAK0B,MAAL,CAAYa,IAAZ,CAAiB,wEAAjB;AACA,wCAAuB,OAAKxB,WAA5B,EAAyC,OAAzC;AACD;;AATS,2BAWqB,OAAKA,WAX1B;AAAA,YAWHnB,KAXG,gBAWHA,KAXG;AAAA,YAWIC,KAXJ,gBAWIA,KAXJ;AAAA,YAWW2I,MAXX,gBAWWA,MAXX;;AAYV,eAAK9G,MAAL,CAAYa,IAAZ,+BAA4C3C,QAAQ,GAAR,GAAc,GAA1D,wBAA8EC,QAAQ,GAAR,GAAc,GAA5F,4BAAoH2I,SAAS,GAAT,GAAe,GAAnI;AACA,eAAO,kBAAQC,GAAR,CAAY,CACjB,CAAC7I,SAASC,KAAV,KAAoBK,kBAAkBqB,YAAlB,CAA+B,EAAC3B,YAAD,EAAQC,YAAR,EAA/B,CADH,EAEjB2I,UAAUtI,kBAAkBqB,YAAlB,CAA+B,EAAC1B,OAAO2I,MAAR,EAA/B,CAFO,CAAZ,CAAP;AAID,OAlBI,EAmBJ/D,IAnBI,CAmBC,gBAAgC;AAAA;AAAA,YAA9BiE,UAA8B;AAAA,YAAlBC,YAAkB;;AACpC,YAAMC,IAAI,EAAV;AACA,YAAIF,UAAJ,EAAgB;AACd,iBAAKhH,MAAL,CAAYa,IAAZ,kCAAgDmG,WAAWG,cAAX,GAA4BvI,MAA5E,0BAAuGoI,WAAWpD,cAAX,GAA4BhF,MAAnI;AACAoI,qBAAWrI,SAAX,GAAuB4C,OAAvB,CAA+B,UAAC4D,CAAD;AAAA,mBAAO+B,EAAEhI,IAAF,CAAO,OAAKuG,iBAAL,CAAuBN,CAAvB,CAAP,CAAP;AAAA,WAA/B;AACD;;AAED,YAAI8B,YAAJ,EAAkB;AAChB,cAAI,OAAKvI,gBAAT,EAA2B;AACzB,gBAAM4G,SAAS,OAAK7G,EAAL,CAAQI,UAAR,GAAqBnB,IAArB,CAA0B,UAACsB,CAAD;AAAA,qBAAO,OAAKN,gBAAL,CAAsBC,SAAtB,GAAkC6C,QAAlC,CAA2CxC,EAAEC,KAA7C,CAAP;AAAA,aAA1B,CAAf;;AAEA,gBAAIqG,MAAJ,EAAY;AACV,qBAAKtF,MAAL,CAAYa,IAAZ,CAAiB,kEAAjB;AACA,qBAAKnC,gBAAL,CAAsBiD,WAAtB,CAAkC2D,OAAOrG,KAAzC;AACA,qBAAKe,MAAL,CAAYa,IAAZ,CAAiB,gDAAjB;AACAyE,qBAAOrG,KAAP,CAAamG,OAAb,GAAuB,KAAvB;AACD;;AAED;AACA6B,yBAAatI,SAAb,GAAyB4C,OAAzB,CAAiC,UAAC4D,CAAD,EAAO;AACtC,kBAAIG,MAAJ,EAAY;AACV;AACA,uBAAKtF,MAAL,CAAYa,IAAZ,CAAiB,gDAAjB;AACAqG,kBAAEhI,IAAF,CAAOoG,OAAO8B,YAAP,CAAoBjC,CAApB,CAAP;AACD,eAJD,MAKK;AACH;AACA,uBAAKnF,MAAL,CAAYa,IAAZ,CAAiB,2CAAjB;AACA,uBAAKpC,EAAL,CAAQgD,QAAR,CAAiB0D,CAAjB,EAAoB8B,YAApB;AACD;AACF,aAXD;AAYD,WAvBD,MAwBK;AACH,mBAAKjH,MAAL,CAAYa,IAAZ,CAAiB,4CAAjB;AACA,mBAAKb,MAAL,CAAYa,IAAZ,CAAiB,iDAAjB;AACAoG,yBAAarD,cAAb,GAA8BrC,OAA9B,CAAsC,UAAC4D,CAAD;AAAA,qBAAO,OAAK1G,EAAL,CAAQgD,QAAR,CAAiB0D,CAAjB,EAAoB8B,YAApB,CAAP;AAAA,aAAtC;AACD;;AAED,iBAAKvI,gBAAL,GAAwBuI,YAAxB;AACD;;AAED,eAAK5H,WAAL,GAAmB,EAAnB;AACA,eAAO,kBAAQ0H,GAAR,CAAYG,CAAZ,CAAP;AACD,OA9DI,EA+DJG,KA/DI,CA+DE,UAACxF,GAAD,EAAS;AACd,eAAKX,OAAL,CAAa,OAAb,EAAsBW,GAAtB;AACA,eAAO,kBAAQyF,MAAR,CAAezF,GAAf,CAAP;AACD,OAlEI,CAAP;AAmED;;AAED;;;;;;;;;sCAMkB5C,K,EAAO;AAAA;;AACvB,UAAMiI,IAAI,EAAV;AACA,UAAI,CAAC,KAAKhC,gBAAV,EAA4B;AAC1B,aAAKA,gBAAL,GAAwB,IAAI7D,WAAJ,EAAxB;AACD;AACD,UAAMiE,SAAS,KAAK7G,EAAL,CAAQI,UAAR,GAAqBnB,IAArB,CAA0B,UAACsB,CAAD;AAAA,eAAOA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQX,IAAR,KAAiBW,MAAMX,IAAzC;AAAA,OAA1B,CAAf;AACA,UAAMiJ,gBAAgB,KAAKrC,gBAAL,CAAsBvG,SAAtB,GAAkCjB,IAAlC,CAAuC,UAACyH,CAAD;AAAA,eAAOA,EAAE7G,IAAF,KAAWW,MAAMX,IAAxB;AAAA,OAAvC,CAAtB;;AAEA,UAAIiJ,kBAAkBtI,KAAtB,EAA6B;AAC3B,YAAIsI,aAAJ,EAAmB;AACjB,eAAKvH,MAAL,CAAYa,IAAZ,wBAAsC0G,cAAcjJ,IAApD;AACA,eAAK4G,gBAAL,CAAsBvD,WAAtB,CAAkC4F,aAAlC;AACD;;AAED,aAAKvH,MAAL,CAAYa,IAAZ,iBAA+B5B,MAAMX,IAArC;AACA,aAAK4G,gBAAL,CAAsBzD,QAAtB,CAA+BxC,KAA/B;AACD;;AAED,UAAIqG,MAAJ,EAAY;AACV,YAAIA,OAAOrG,KAAP,KAAiBA,KAArB,EAA4B;AAC1B,eAAKe,MAAL,CAAYa,IAAZ,yDAAuE5B,MAAMX,IAA7E;AACAgH,iBAAOrG,KAAP,CAAamG,OAAb,GAAuB,IAAvB;AACD,SAHD,MAIK;AACH,eAAKpF,MAAL,CAAYa,IAAZ,oBAAkC5B,MAAMX,IAAxC;AACA4I,YAAEhI,IAAF,CAAOoG,OAAO8B,YAAP,CAAoBnI,KAApB,EACJ8D,IADI,CACC,YAAM;AACV,mBAAK/C,MAAL,CAAYa,IAAZ,2BAAyC5B,MAAMX,IAA/C;AACD,WAHI,EAIJ+I,KAJI,CAIE,UAACG,CAAD,EAAO;AACZ;AACA,mBAAKxH,MAAL,CAAYyH,IAAZ,CAAiBD,CAAjB;AACA,mBAAKxH,MAAL,CAAYyH,IAAZ,8BAA4CxI,MAAMX,IAAlD;AACA,mBAAK0B,MAAL,CAAYa,IAAZ,oBAAkC5B,MAAMX,IAAxC;AACA,mBAAKG,EAAL,CAAQkD,WAAR,CAAoB2D,MAApB;AACA,mBAAK7G,EAAL,CAAQgD,QAAR,CAAiBxC,KAAjB,EAAwB,OAAKiG,gBAA7B;AACD,WAXI,CAAP;AAYD;AACF,OApBD,MAqBK;AACH,aAAKlF,MAAL,CAAYa,IAAZ,iBAA+B5B,MAAMX,IAArC;AACA,aAAKG,EAAL,CAAQgD,QAAR,CAAiBxC,KAAjB,EAAwB,KAAKiG,gBAA7B;AACD;;AAED,WAAKlF,MAAL,CAAYa,IAAZ,qBAAmC5C,WAAWgB,MAAMX,IAAjB,CAAnC;AACA,uBAAeL,WAAWgB,MAAMX,IAAjB,CAAf,IAA2C,IAA3C;AACA,aAAO,kBAAQyI,GAAR,CAAYG,CAAZ,CAAP;AACD;;AAED;;;;;;;;;;sCAOkB5I,I,EAAM;AAAA;;AACtB,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAIgI,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAMvB,UAAU,KAAKtG,EAAL,CACbI,UADa,GAEbmG,MAFa,CAEN,UAAChG,CAAD;AAAA,eAAOA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQX,IAAR,KAAiBA,IAAnC;AAAA,OAFM,CAAhB;;AAIA,UAAIyG,QAAQnG,MAAR,KAAmB,CAAvB,EAA0B;AACxB,cAAM,IAAI0H,KAAJ,SAAgBhI,IAAhB,6BAAN;AACD;;AAEDyG,cAAQxD,OAAR,CAAgB,UAACvC,CAAD,EAAO;AACrB,gBAAKgB,MAAL,CAAYa,IAAZ,cAA4BvC,IAA5B;AACAU,UAAEC,KAAF,CAAQmG,OAAR,GAAkB,KAAlB;AACD,OAHD;;AAKA,WAAKpF,MAAL,CAAYa,IAAZ,qBAAmC5C,WAAWK,IAAX,CAAnC;AACA,uBAAeL,WAAWK,IAAX,CAAf,IAAqC,KAArC;AACD;;AAED;;;;;;;wDAIoC;AAAA;;AAClC,OAAC,OAAD,EAAU,OAAV,EAAmBiD,OAAnB,CAA2B,UAACjD,IAAD,EAAU;AACnC;AACA,YAAMoJ,kBAAkBtJ,wBAAwB,OAAxB,EAA8BE,IAA9B,CAAxB;AACA;AACA,YAAMuG,YAAY,QAAQvG,IAAR,eAAlB;AACA;AACA,YAAIuG,cAAc6C,eAAlB,EAAmC;AACjC,cAAMC,aAAaD,gBAAgBlG,QAAhB,CAAyB,MAAzB,CAAnB;AACA,cAAIqD,UAAUrD,QAAV,CAAmB,MAAnB,MAA+BmG,UAAnC,EAA+C;AAC7C;AACA,oBAAKlJ,EAAL,CAAQI,UAAR,GAAqB0C,OAArB,CAA6B,UAACvC,CAAD,EAAO;AAClC,kBAAIA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQX,IAAR,KAAiBA,IAAhC,EAAsC;AACpCU,kBAAEC,KAAF,CAAQmG,OAAR,GAAkBuC,UAAlB;AACD;AACF,aAJD;AAKD;AACD,cAAMjB,aAAagB,gBAAgBlG,QAAhB,CAAyB,MAAzB,CAAnB;AACA,cAAIqD,UAAUrD,QAAV,CAAmB,MAAnB,MAA+BkF,UAAnC,EAA+C;AAC7C;AACA,oBAAKjI,EAAL,CAAQU,YAAR,GAAuBoC,OAAvB,CAA+B,UAACnC,CAAD,EAAO;AACpC,kBAAIA,EAAEH,KAAF,IAAWG,EAAEH,KAAF,CAAQX,IAAR,KAAiBA,IAAhC,EAAsC;AACpCc,kBAAEH,KAAF,CAAQmG,OAAR,GAAkBsB,UAAlB;AACD;AACF,aAJD;AAKD;AACF;AACF,OA1BD;AA2BD;;AAED;;;;;;;;;wCAMoBpI,I,EAAM;AAAA;;AACxB,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAIgI,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAMvB,UAAU,KAAKtG,EAAL,CACbI,UADa,GAEbmG,MAFa,CAEN,UAAChG,CAAD;AAAA,eAAOA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQX,IAAR,KAAiBA,IAAnC;AAAA,OAFM,CAAhB;;AAIA,UAAIyG,QAAQnG,MAAR,KAAmB,CAAvB,EAA0B;AACxB,cAAM,IAAI0H,KAAJ,SAAgBhI,IAAhB,+BAAN;AACD;;AAEDyG,cAAQxD,OAAR,CAAgB,UAACvC,CAAD,EAAO;AACrB,gBAAKgB,MAAL,CAAYa,IAAZ,gBAA8BvC,IAA9B;AACAU,UAAEC,KAAF,CAAQmG,OAAR,GAAkB,IAAlB;AACD,OAHD;;AAKA,WAAKpF,MAAL,CAAYa,IAAZ,qBAAmC5C,WAAWK,IAAX,CAAnC;AACA,uBAAeL,WAAWK,IAAX,CAAf,IAAqC,IAArC;AACD;;AAED;;;;;;;;;wCAMoBA,I,EAAM;AAAA;;AACxB,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAIgI,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAMK,YAAY,KAAKlI,EAAL,CACfU,YADe,GAEf6F,MAFe,CAER,UAAC5F,CAAD;AAAA,eAAOA,EAAEH,KAAF,IAAWG,EAAEH,KAAF,CAAQX,IAAR,KAAiBA,IAAnC;AAAA,OAFQ,CAAlB;;AAIA,UAAIqI,UAAU/H,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,cAAM,IAAI0H,KAAJ,SAAgBhI,IAAhB,qCAAN;AACD;;AAGDqI,gBAAUpF,OAAV,CAAkB,UAACnC,CAAD,EAAO;AACvB,gBAAKY,MAAL,CAAYa,IAAZ,qBAAmCvC,IAAnC;AACAc,UAAEH,KAAF,CAAQmG,OAAR,GAAkB,KAAlB;AACD,OAHD;;AAKA,WAAKpF,MAAL,CAAYa,IAAZ,uBAAqC5C,WAAWK,IAAX,CAArC;AACA,yBAAiBL,WAAWK,IAAX,CAAjB,IAAuC,KAAvC;AACD;;AAED;;;;;;;;;0CAMsBA,I,EAAM;AAAA;;AAC1B,UAAI,CAACA,IAAL,EAAW;AACT,cAAM,IAAIgI,KAAJ,CAAU,kBAAV,CAAN;AACD;AACD,UAAMK,YAAY,KAAKlI,EAAL,CACfU,YADe,GAEf6F,MAFe,CAER,UAAC5F,CAAD;AAAA,eAAOA,EAAEH,KAAF,IAAWG,EAAEH,KAAF,CAAQX,IAAR,KAAiBA,IAAnC;AAAA,OAFQ,CAAlB;;AAIA,UAAIqI,UAAU/H,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,cAAM,IAAI0H,KAAJ,SAAgBhI,IAAhB,qCAAN;AACD;;AAEDqI,gBAAUpF,OAAV,CAAkB,UAACnC,CAAD,EAAO;AACvB,gBAAKY,MAAL,CAAYa,IAAZ,gBAA8BvC,IAA9B;AACAc,UAAEH,KAAF,CAAQmG,OAAR,GAAkB,IAAlB;AACD,OAHD;;AAKA,WAAKpF,MAAL,CAAYa,IAAZ,uBAAqC5C,WAAWK,IAAX,CAArC,sBAAsE,mBAAiBL,WAAWK,IAAX,CAAjB,CAAtE;AACA,yBAAiBL,WAAWK,IAAX,CAAjB,IAAuC,IAAvC;AACD;;AAED;;;;;;;;2BAKO;AACL,UAAI,KAAKG,EAAL,CAAQ+F,cAAR,KAA2B,QAA/B,EAAyC;AACvC,aAAK/F,EAAL,CAAQI,UAAR,GAAqB0C,OAArB,CAA6B,UAACvC,CAAD;AAAA,iBAAOA,EAAEC,KAAF,IAAWD,EAAEC,KAAF,CAAQmH,IAAR,EAAlB;AAAA,SAA7B;AACA,aAAK3H,EAAL,CAAQmJ,KAAR;AACD;;AAED,WAAKnJ,EAAL,CAAQmC,mBAAR,GAA8BgB,SAA9B;AACA,WAAKnD,EAAL,CAAQuC,OAAR,GAAkBY,SAAlB;AACA,WAAKnD,EAAL,CAAQ+D,cAAR,GAAyBZ,SAAzB;AACA,WAAKiG,KAAL,GAAa,IAAb;AACA,WAAKC,GAAL;AACD;;;;AAGD;;;;;AAKA;AACA;+CAC2B;AACzB,WAAK5G,OAAL,CAAa,mBAAb;AACD;;AAED;;;;;;;gCAIY;AACV,aAAO,mBAAP;AACD;;;qFAl5BA6G,uB;;;qFAQAA,uB;;;oFAQAA,uB;;;4EAuBAA,uB;;;WAKU,E;;6EAEVA,uB;;;WAKW,E;;gFAEXA,uB;;;WACc,K;;gFAEdA,uB;;;WACc,K;;kFAEdA,uB;;;WACgB,K;;kFAEhBA,uB;;;WACgB,K;;0EAEhBA,uB;;;WACO,K;;gFAwSPC,6B;;;WAOa,E;;iFAEbA,6B;;;WAOc,E;;4EAEdA,6B,EACAD,uB;;;WAOS,K;;wEA2NTE,iB;kBA7mBkBzJ,iB;;;AAm6BrB,sBAAcA,kBAAkB0J,SAAhC,EAA2CC,yBAA3C","file":"engine.js","sourcesContent":["import bowser from 'bowser';\nimport {debounce} from 'lodash-decorators';\nimport {nonenumerable} from 'core-decorators';\nimport {make as makeTemplateContainer, oneFlight, tap, whileInFlight} from '@ciscospark/common';\nimport evented from '@ciscospark/common-evented';\nimport Events from 'ampersand-events';\nimport {defaults} from 'lodash';\nimport {parse} from 'sdp-transform';\nimport grammar from 'sdp-transform/lib/grammar';\n\nimport {\n  ensureH264,\n  limitBandwith,\n  removeExtmap,\n  getMediaDirectionFromTracks,\n  kindToPropertyFragment\n} from './webrtc-helpers';\n\n// Add support for our custom \"content\" attribute. Note: this seems to make\n// parse() work correctly, but I don't think I could get write() to work.\nif (!grammar.a.find((g) => g.name === 'content')) {\n  grammar.a.unshift({\n    // name appears to be where we stick the value of this field in the parsed\n    // media object\n    name: 'content',\n    // reg determines whether or not this line should be handled by this rule\n    reg: /^content:(slides)/\n  });\n}\n\nconst DirectionContainer = makeTemplateContainer(WeakMap, Map);\nconst targetMediaDirection = new DirectionContainer();\n\nconst capitalize = {\n  audio: 'Audio',\n  video: 'Video'\n};\n\n/**\n * Wrapper around targetMediaDirection.get which return `inactive` instead of\n * undefined\n * @param {WebRTCMediaEngine} target\n * @param {string} kind\n * @private\n * @returns {string}\n */\nfunction getTargetMediaDirection(target, kind) {\n  return targetMediaDirection.get(target, kind) || 'inactive';\n}\n\n/**\n * Interface for doing webrtc things\n * @protected\n */\nexport default class WebRTCMediaEngine {\n  /**\n   * Wrapper around navigator.mediaDevices.getUserMedia\n   *\n   * @param {MediaStreamContraints} constraints\n   * @returns {Promise<MediaStream>}\n   */\n  static getUserMedia(constraints) {\n    const finalConstraints = defaults({}, constraints, {fake: process.env.NODE_ENV === 'test'});\n    return navigator.mediaDevices.getUserMedia(finalConstraints);\n  }\n\n  logger = console\n\n  @evented\n  /**\n   * Represents the local party's outgoing stream. Instantiated when the class\n   * is instantiated.\n   * @type {MediaStream}\n   */\n  localMediaStream\n\n  @evented\n  /**\n   * Represent the remote party's incoming media. Instantiated when the class is\n   * instantiated.\n   * @type {MediaStream}\n   */\n  remoteMediaStream\n\n  @evented\n  /**\n   * Reserved for future use\n   * @type {MediaStream}\n   */\n  localScreenShare\n\n  /**\n   * Peer Connection\n   * Explicitly set Plan B. RTCPeerConnections generate and expect the standards compliant SDP format\n   * called \"Unified Plan\", unless \"Plan B\" is explicitly specified by passing {sdpSemantics:'plan-b'}\n   * to the RTCPeerConnection constructor.\n   *\n   * chrome://flags/#webrtc-unified-plan-by-default\n   * https://docs.google.com/document/d/1-ZfikoUtoJa9k-GZG1daN0BU3IjIanQ_JSscHxQesvU/edit?usp=sharing\n   * @type {RTCPeerConnection}\n   */\n  pc = new RTCPeerConnection({\n    iceServers: [],\n    bundlePolicy: 'max-compat',\n    sdpSemantics: 'plan-b'\n  });\n\n  @evented\n  /**\n   * The most-recently produced offer\n   * @private\n   */\n  offerSdp = '';\n\n  @evented\n  /**\n   * The most-recently accepted answer\n   * @private\n   */\n  answerSdp = '';\n\n  @evented\n  sendingAudio = false;\n\n  @evented\n  sendingVideo = false;\n\n  @evented\n  receivingAudio = false;\n\n  @evented\n  receivingVideo = false;\n\n  @evented\n  ended = false;\n\n  negotiationNeeded = false;\n\n  bandwidthLimit = {\n    audioBandwidthLimit: 60000,\n    videoBandwidthLimit: 1000000\n  };\n\n  /**\n   * Returns the current audio direction\n   * @returns {string}\n   */\n  get audioDirection() {\n    return getMediaDirectionFromTracks('audio', this.pc);\n  }\n\n  /**\n   * Returns the current video direction\n   * @returns {string}\n   */\n  get videoDirection() {\n    return getMediaDirectionFromTracks('video', this.pc);\n  }\n\n  /**\n   * Returns the current screen direction\n   * @returns {string}\n   */\n  get screenDirection() {\n    return (!this.localScreenShare || this.localScreenShare.getTracks().length === 0) ? 'inactive' : 'sendonly';\n  }\n\n  /**\n   * Returns the current tracks attached to senders\n   * @returns {string}\n   */\n  get senderTracks() {\n    return this.pc.getSenders().reduce((acc, s) => {\n      if (s.track) {\n        acc.push(s.track);\n      }\n      return acc;\n    }, []);\n  }\n\n  /**\n   * Returns the current tracks attached to receivers\n   * @returns {string}\n   */\n  get receiverTracks() {\n    return this.pc.getReceivers().reduce((acc, r) => {\n      if (r.track) {\n        acc.push(r.track);\n      }\n      return acc;\n    }, []);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} attrs\n   * @param {Object} options\n   * @param {Logger} options.logger (optional): defaults to console\n   * @returns {WebRTCMediaEngine}\n   */\n  constructor(attrs = {}, options = {}) {\n    if (options.parent) {\n      // This is a bit of weirdness to maintain amp-state compatibility\n      process.nextTick(() => {\n        if (options.parent.logger) {\n          this.logger = options.parent.logger;\n        }\n      });\n    }\n    else if (attrs.logger) {\n      this.logger = attrs.logger;\n    }\n\n    this.pc.onnegotiationneeded = () => {\n      this.logger.info('peer connection emitted negotiationneeded');\n      if (this.answerSdp && !this.negotiationNeeded) {\n        this.negotiationNeeded = true;\n        this.triggerNegotiationNeeded();\n      }\n    };\n\n    // Note: adapter.js doesn't seem to fully shim the track event.\n    // addEventListener doesn't appear to work for it in chrome\n    this.pc.ontrack = (event) => {\n      this.logger.info('peerConnection ontrack fired, updating remoteMediaStream');\n      this.trigger('track');\n      const stream = this.remoteMediaStream || new MediaStream();\n      event.streams[0]\n        .getTracks()\n        .forEach((track) => {\n          this.logger.info(`adding ${track.kind} track to remoteMediaStream`);\n          if (stream && !stream.getTracks().includes(track)) {\n            stream.addTrack(track);\n          }\n          track.onended = () => {\n            this.logger.info(`remote ${track.kind} has ended, removing track from remoteMediaStream`);\n            stream.removeTrack(track);\n            track.onended = undefined;\n            try {\n              this[`receiving${capitalize[track.kind]}`] = getMediaDirectionFromTracks(track.kind, this.pc).includes('recv');\n            }\n            catch (err) {\n              this[`receiving${capitalize[track.kind]}`] = false;\n            }\n          };\n\n          this[`receiving${capitalize[track.kind]}`] = getMediaDirectionFromTracks(track.kind, this.pc).includes('recv');\n        });\n      this.remoteMediaStream = stream;\n      this.trigger('internalTrackUpdate');\n    };\n  }\n\n  /* eslint-disable complexity */\n  /**\n   * Determines if ice gathering is necessary and sends it up when appropriate\n   * @private\n   * @returns {Promise|undefined}\n   */\n  _prepareIceGatherer() {\n    let needsIce = false;\n    if (this.pc.iceGatheringState === 'new') {\n      this.logger.info('ice gathering is in state \"new\", definitely need to block for ice gathering');\n      needsIce = true;\n    }\n    else {\n      const sdp = parse(this.pc.localDescription.sdp);\n      [\n        'audio',\n        'video',\n        'screen'\n      ].forEach((kind) => {\n        const directionKey = `${kind}Direction`;\n        if (this[directionKey] !== 'inactive'\n          || getTargetMediaDirection(this, kind) !== this[directionKey]\n          && getTargetMediaDirection(this, kind) !== 'inactive') {\n          const media = sdp.media.find((m) => m.type === kind);\n          if (media) {\n            this.logger.info(`${kind} candidates already gathered`);\n          }\n          else {\n            this.logger.info(`transitioning ${kind} from inactive, ice needed`);\n            needsIce = true;\n          }\n        }\n      });\n    }\n\n    let icePromise;\n    if (needsIce) {\n      icePromise = new Promise((resolve) => {\n        this.logger.info('configuring ice gathering');\n        this.pc.onicecandidate = (event) => {\n          if (!event.candidate) {\n            this.logger.info('ice gathering complete');\n            this.pc.onicecandidate = undefined;\n            resolve();\n            return;\n          }\n\n          this.logger.info('got ice candidate');\n        };\n      });\n    }\n\n    return icePromise;\n  }\n\n  /* eslint-enable complexity */\n\n  /**\n   * Creates an offer SDP\n   * @returns {Promise<string>}\n   */\n  createOffer() {\n    this.logger.info('beginning negotiation');\n\n    const td = getTargetMediaDirection(this, 'video');\n    const wantsVideo = td.includes('send') || td.includes('recv');\n\n    const icePromise = this._prepareIceGatherer();\n\n    return new Promise((resolve) => {\n      if (this.gumming) {\n        this.logger.info('gum in flight, waiting until it completes');\n        // Since gum is protected by @oneflight, returning it here will block\n        // until it completes but, more importantly, propagate a thrown\n        // exception up the stack\n        resolve(this._getUserMedia()\n          .then(tap(() => this.logger.info('gum completed'))));\n        return;\n      }\n\n      resolve();\n    })\n      .then(tap(() => this.logger.info('starting create offer', this.offerOptions)))\n      .then(() => {\n        this.offerOptions.offerToReceiveAudio = !!this.offerOptions.offerToReceiveAudio;\n        this.offerOptions.offerToReceiveVideo = !!this.offerOptions.offerToReceiveVideo;\n        this.logger.info('creating REAL offer', this.offerOptions);\n        this.logger.info(`createOffer audioDirection: ${this.audioDirection}`);\n        this.logger.info(`createOffer videoDirection: ${this.videoDirection}`);\n        this.logger.info(`createOffer screenDirection: ${this.screenDirection}`);\n\n        // Ensure senders and receivers are in the correct state based on media direction\n        this.updateLocalMediaToTargetDirection();\n        return this.pc.createOffer(this.offerOptions);\n      })\n\n      .then(tap((offer) => {\n        offer.sdp = limitBandwith(this.bandwidthLimit, offer.sdp);\n        offer.sdp = removeExtmap(offer.sdp);\n      }))\n      .then(tap(() => this.logger.info('setting local description')))\n      .then((offer) => this.pc.setLocalDescription(offer))\n      .then(tap(() => icePromise && this.logger.info('blocking for ice gathering')))\n      .then(() => icePromise)\n      .then(tap(() => this.logger.info('limiting bandwith')))\n      .then(() => limitBandwith(this.bandwidthLimit, this.pc.localDescription.sdp))\n      .then(tap(() => wantsVideo && this.logger.info('confirm h264 in offer')))\n      .then(ensureH264(wantsVideo))\n      .then((sdp) => {\n        if (this.localScreenShare) {\n          // Add content descriptor to the local sdp\n          const streamId = this.localScreenShare.id;\n          const track = this.localScreenShare.getVideoTracks()[0];\n          if (track) {\n            const trackId = track.id;\n            const msid = `${streamId} ${trackId}`;\n            const sections = sdp.split(msid);\n            if (sections[1]) {\n              sections[1] = `\\r\\na=content:slides${sections[1]}`;\n              sdp = sections.join(msid);\n              return sdp;\n            }\n          }\n\n          sdp += 'a=content:slides\\r\\n';\n        }\n        return sdp;\n      })\n      .then(tap((sdp) => {\n        this.offerSdp = sdp;\n      }));\n  }\n\n  /**\n   * Receives an answer SDP\n   * @param {string} sdp\n   * @returns {Promise}\n   */\n  acceptAnswer(sdp) {\n    this.logger.info('accepting answer');\n    this.logger.debug('new answer sdp:', sdp);\n    // Allow larger frames (this makes screenshare look *way* better, but no\n    // idea what impact it's having on the camera stream - we may want to limit\n    // it to just screen share at some future point)\n    const defaultCodecParams = /max-mbps=27600;max-fs=920/g;\n    const newCodecParams = 'max-mbps=27600;max-fs=8160';\n    let newSdp = sdp.replace(defaultCodecParams, newCodecParams);\n\n    // If the screenshare goes inactive, make sure the sdp includes a direction\n    // config\n    newSdp = newSdp.replace(/m=video 0(.*?\\r\\n)/, 'm=video 0$1a=inactive\\r\\n');\n\n    // extmapFix\n    newSdp = removeExtmap(newSdp);\n\n    this.logger.debug('cleaned answer sdp:', newSdp);\n    // Only accept answer if PeerConnection is in the correct state\n    if (this.pc.signalingState === 'have-local-offer') {\n      return this.pc.setRemoteDescription(new RTCSessionDescription({\n        sdp: newSdp,\n        type: 'answer'\n      }))\n        .then(() => {\n          this.logger.info('answer accepted');\n          this.answerSdp = newSdp;\n          this.sendingAudio = getMediaDirectionFromTracks('audio', this.pc).includes('send');\n          this.sendingVideo = getMediaDirectionFromTracks('video', this.pc).includes('send');\n\n          // Update media enabled flags in case we get extra media stream\n          this.updateLocalMediaToTargetDirection();\n          this.trigger('answeraccepted');\n          this.negotiationNeeded = false;\n        });\n    }\n    return Promise.resolve();\n  }\n\n  @nonenumerable\n  /**\n   * {@link MediaStreamConstraints} that'll be used for the next call to\n   * {@link WebRTCMediaEngine.getUserMedia()}\n   * @private\n   * @type {MediaStreamConstraints}\n   */\n  constraints = {};\n\n  @nonenumerable\n  /**\n   * {@link RTCOfferOptions} that'll be used for the next call to\n   * {@link RTCPeerConnection.createOffer}\n   * @private\n   * @type {RTCOfferOptions}\n   */\n  offerOptions = {};\n\n  @nonenumerable\n  @evented\n  /**\n   * Indicates whether or not a call to {@link MediaDevices#getUserMedia()} is\n   * in flight\n   * @private\n   * @type {boolean}\n   */\n  gumming = false\n\n  /**\n   * Change media direction without consumer provided tracks or complex\n   * constraints\n   * @param {string} kind\n   * @param {string} direction\n   * @private\n   * @returns {Promise}\n   */\n  _setNewMediaDirection(kind, direction) {\n    this.logger.info(`setting ${kind} direction to ${direction}`);\n    const isSending = direction.includes('send');\n    this.constraints[kind] = isSending;\n\n    if (isSending) {\n      const senders = this.pc.getSenders().filter((s) => s.track && s.track.kind === kind);\n      if (senders.length > 0) {\n        this.logger.info(`enabling existing ${kind} sender track`);\n        const localTracks = this.localMediaStream.getTracks().filter((t) => t.kind === kind);\n        senders.forEach((s) => {\n          s.track.enabled = localTracks.includes(s.track);\n        });\n        this[`sending${capitalize[kind]}`] = isSending;\n        return Promise.resolve();\n      }\n      if (!this[`${kind}Direction`].includes('send')) {\n        // only set new constraints if we were not already sending media\n        return this._setNewMediaConstraint(kind, isSending);\n      }\n    }\n    else {\n      this.logger.info(`muting ${kind} local tracks`);\n      if (!this.localMediaStream) {\n        return Promise.resolve();\n      }\n      return this.localMediaStream\n        .getTracks()\n        .filter((t) => t.kind === kind)\n        .forEach((track) => {\n          // We remove the track from localMediaStream, and disable on PeerConnection\n          this.logger.info(`muting existing ${kind} track from localMediaStream`);\n          const sender = this.pc.getSenders().find((s) => s.track === track);\n          if (!bowser.firefox) {\n            this.localMediaStream.removeTrack(track);\n          }\n          if (sender) {\n            this.logger.info(`muting existing ${kind} track on sender`);\n            sender.track.enabled = false;\n            track.enabled = false;\n            // We must remove sender track from PC when muting\n            // browsers will still create SDP media field if we don't remote the track\n            if (!bowser.firefox) {\n              this.pc.removeTrack(sender);\n            }\n          }\n          this.logger.info(`setting sending${capitalize[kind]} to ${isSending}`);\n          this[`sending${capitalize[kind]}`] = isSending;\n        });\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Sets or replaces current track for $kind\n   * @param {string} kind\n   * @param {MediaStreamTrack} track\n   * @returns {Promise}\n   */\n  _setNewMediaTrack(kind, track) {\n    this.logger.info(`setting new ${kind} track`);\n    this.constraints[kind] = false;\n    return this.addOrReplaceTrack(track);\n  }\n\n  /**\n   * Causes track for ${kind} to be set or replaced according to $constraint\n   * @param {string} kind\n   * @param {Object|boolean} constraint\n   * @returns {Promise}\n   */\n  _setNewMediaConstraint(kind, constraint) {\n    this.logger.info(`setting ${kind} with new constraint`);\n    this.constraints[kind] = constraint;\n    return this._getUserMedia();\n  }\n\n  /**\n   * Starts or stops an outbound screenshare\n   *\n   * @param {string} direction currently only inactive or sendonly\n   * @param {Object|MediaStreamTrack} trackOrConstraint\n   * @returns {Promise}\n   */\n  _setScreenShare(direction, trackOrConstraint) {\n    this.logger.info('calling _setScreenShare');\n    targetMediaDirection.set(this, 'screen', direction);\n    if (direction.includes('send')) {\n      const constraint = defaults({}, trackOrConstraint, {\n        mediaSource: 'application',\n        width: {\n          min: '160',\n          max: '1920'\n        },\n        height: {\n          min: '90',\n          max: '1080'\n        },\n        frameRate: {\n          min: '1',\n          max: '30'\n        }\n      });\n\n      this._setNewMediaConstraint('screen', constraint);\n      return;\n    }\n\n    this.logger.info('removing existing screenshare tracks from peer connection and localScreenShare stream');\n    this.pc.getSenders()\n      .filter((s) => s.track && this.localScreenShare.getTracks().includes(s.track))\n      .forEach((s) => {\n        this.logger.info(`removing screenshare track ${s.track.id} from peer connection and localScreenShare stream`);\n        const senderTrack = s.track;\n        s.track.enabled = false;\n        this.localScreenShare.removeTrack(senderTrack);\n        this.pc.removeTrack(s);\n        senderTrack.stop();\n        this.logger.info(`removed screenshare track ${senderTrack.id} from peer connection and localScreenShare stream`);\n      });\n    // Remove reference to screen share media stream to trigger change event\n    this.localScreenShare = false;\n  }\n\n  // I don't see any further ways to reduce complexity without hurting\n  // readability\n  /* eslint-disable complexity */\n  /**\n   * Sets a media direction for a given media type. Almost certainly triggers\n   * renegotiation. This is the method to use if you want to replace a track.\n   * @param {string} kind audio|video\n   * @param {string} direction sendonly|recvonly|sendrecv|inactive\n   * @param {MediaStreamTrack|Object} trackOrConstraint\n   * @returns {Promise}\n   */\n  setMedia(kind, direction, trackOrConstraint) {\n    this.logger.info('setMedia');\n    if (kind === 'screen') {\n      this.logger.info('setMedia: setting new screen direction');\n      this._setScreenShare(direction, trackOrConstraint);\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve) => {\n      if (trackOrConstraint) {\n        if (!direction.includes('send')) {\n          throw new Error(`Cannot set new ${kind} track or constraint if direction does not include send`);\n        }\n\n        if (trackOrConstraint instanceof MediaStreamTrack) {\n          if (trackOrConstraint.kind !== kind) {\n            throw new Error(`track is not a valid ${kind} media stream track`);\n          }\n\n          resolve(this._setNewMediaTrack(kind, trackOrConstraint));\n        }\n        else {\n          resolve(this._setNewMediaConstraint(kind, trackOrConstraint));\n        }\n      }\n      else {\n        if (direction === getTargetMediaDirection(this, kind)) {\n          this.logger.info(`setMedia: ${kind} already transitioning to ${direction}, not making changes`);\n          resolve();\n        }\n\n        if (direction === this[`${kind}Direction`]) {\n          this.logger.info(`setMedia: ${kind} already set to ${direction}, not making changes`);\n          resolve();\n        }\n        resolve(this._setNewMediaDirection(kind, direction));\n      }\n    }).then(() => {\n      const shouldRecv = direction.includes('recv');\n\n      this.logger.info(`setMedia: set targetMediaDirection for ${kind} to ${direction}`);\n      targetMediaDirection.set(this, kind, direction);\n\n      this.logger.info(`setMedia: set offerToReceive${kindToPropertyFragment(kind)} to ${shouldRecv}`);\n      this.offerOptions[`offerToReceive${kindToPropertyFragment(kind)}`] = shouldRecv;\n\n      const receivers = this.pc.getReceivers().filter((r) => r.track && r.track.kind === kind);\n\n      if (shouldRecv) {\n        if (receivers.length > 0) {\n          this.logger.info(`setMedia: unpause existing receiving ${kind} track`);\n          this.unpauseReceivingMedia(kind);\n        }\n        else\n        if (!receivers.length && this.answerSdp) {\n          this.logger.info(`setMedia: no receiving ${kind} track exists, trigger negotiation`);\n          this.triggerNegotiationNeeded();\n        }\n      }\n      else if (receivers.length > 0) {\n        this.logger.info(`setMedia: pausing existing receiving ${kind} track`);\n        this.pauseReceivingMedia(kind);\n      }\n    });\n  }\n\n  /* eslint-enable complexity */\n  /**\n   * Wrapper around {@link MediaDevices#getUserMedia()} that delays the call one\n   * tick to reduce the number of permissions dialogs presented to the user.\n   * @name _getUserMedia\n   * @returns {Promise<MediaStream>}\n   */\n  @whileInFlight('gumming')\n  @oneFlight\n  _getUserMedia() {\n    this.logger.info('enqueing request to get user media');\n    return new Promise((resolve) => process.nextTick(resolve))\n      .then(() => {\n        if (this.constraints.audio === true && this.pc.getSenders().find((s) => s.track && s.track.kind === 'audio')) {\n          this.logger.info('already have a local audio track, removing constraint for a second one');\n          Reflect.deleteProperty(this.constraints, 'audio');\n        }\n\n        if (this.constraints.video === true && this.pc.getSenders().find((s) => s.track && s.track.kind === 'video')) {\n          this.logger.info('already have a local video track, removing constraint for a second one');\n          Reflect.deleteProperty(this.constraints, 'video');\n        }\n\n        const {audio, video, screen} = this.constraints;\n        this.logger.info(`getting user media with ${audio ? '1' : '0'} audio track, ${video ? '1' : '0'} video track, and ${screen ? '1' : '0'} screenshare track.`);\n        return Promise.all([\n          (audio || video) && WebRTCMediaEngine.getUserMedia({audio, video}),\n          screen && WebRTCMediaEngine.getUserMedia({video: screen})\n        ]);\n      })\n      .then(([userStream, screenStream]) => {\n        const p = [];\n        if (userStream) {\n          this.logger.info(`got local media stream with ${userStream.getAudioTracks().length} audio tracks and ${userStream.getVideoTracks().length} video tracks`);\n          userStream.getTracks().forEach((t) => p.push(this.addOrReplaceTrack(t)));\n        }\n\n        if (screenStream) {\n          if (this.localScreenShare) {\n            const sender = this.pc.getSenders().find((s) => this.localScreenShare.getTracks().includes(s.track));\n\n            if (sender) {\n              this.logger.info('removing existing screenshare track from localScreenShare stream');\n              this.localScreenShare.removeTrack(sender.track);\n              this.logger.info('disabling existing screenshare track on sender');\n              sender.track.enabled = false;\n            }\n\n            // We hope there's only a single track from the screenshare\n            screenStream.getTracks().forEach((t) => {\n              if (sender) {\n                // if a sender already exists and we need to update with a new track, replace the track\n                this.logger.info('replacing existing screenshare track on sender');\n                p.push(sender.replaceTrack(t));\n              }\n              else {\n                // If we've never sent, we should\n                this.logger.info('adding new screen track to peerConnection');\n                this.pc.addTrack(t, screenStream);\n              }\n            });\n          }\n          else {\n            this.logger.info('adding localScreenShare for the first time');\n            this.logger.info('adding new screenshare track to peer connection');\n            screenStream.getVideoTracks().forEach((t) => this.pc.addTrack(t, screenStream));\n          }\n\n          this.localScreenShare = screenStream;\n        }\n\n        this.constraints = {};\n        return Promise.all(p);\n      })\n      .catch((err) => {\n        this.trigger('error', err);\n        return Promise.reject(err);\n      });\n  }\n\n  /**\n   * adds or replaces a local @{link MediaStreamTrack}\n   * @private\n   * @param {MediaStreamTrack} track\n   * @returns {Promise}\n   */\n  addOrReplaceTrack(track) {\n    const p = [];\n    if (!this.localMediaStream) {\n      this.localMediaStream = new MediaStream();\n    }\n    const sender = this.pc.getSenders().find((s) => s.track && s.track.kind === track.kind);\n    const existingTrack = this.localMediaStream.getTracks().find((t) => t.kind === track.kind);\n\n    if (existingTrack !== track) {\n      if (existingTrack) {\n        this.logger.info(`removing previous ${existingTrack.kind} track from localMediaStream`);\n        this.localMediaStream.removeTrack(existingTrack);\n      }\n\n      this.logger.info(`adding new ${track.kind} track to localMediaStream`);\n      this.localMediaStream.addTrack(track);\n    }\n\n    if (sender) {\n      if (sender.track === track) {\n        this.logger.info(`new track is the same as existing track, renabling ${track.kind} track on sender`);\n        sender.track.enabled = true;\n      }\n      else {\n        this.logger.info(`replacing new ${track.kind} on existing sender`);\n        p.push(sender.replaceTrack(track)\n          .then(() => {\n            this.logger.info(`successfully replace ${track.kind} on existing sender`);\n          })\n          .catch((e) => {\n            // replaceTrack fails silently so we need to check if track was added correctly\n            this.logger.warn(e);\n            this.logger.warn(`was not able to replace ${track.kind} track on sender`);\n            this.logger.info(`adding as new ${track.kind} track to peerConnection`);\n            this.pc.removeTrack(sender);\n            this.pc.addTrack(track, this.localMediaStream);\n          }));\n      }\n    }\n    else {\n      this.logger.info(`adding new ${track.kind} track to peerConnection`);\n      this.pc.addTrack(track, this.localMediaStream);\n    }\n\n    this.logger.info(`setting sending${capitalize[track.kind]} to true`);\n    this[`sending${capitalize[track.kind]}`] = true;\n    return Promise.all(p);\n  }\n\n  /**\n   * Stops sending useful bits on the identified track, but does not end it (the\n   * camera/mic will stay on but the remote party(s) will not see/hear anything).\n   * Avoids renegotiation. Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  pauseSendingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const senders = this.pc\n      .getSenders()\n      .filter((s) => s.track && s.track.kind === kind);\n\n    if (senders.length === 0) {\n      throw new Error(`No ${kind} media senders to pause`);\n    }\n\n    senders.forEach((s) => {\n      this.logger.info(`pausing ${kind} sender`);\n      s.track.enabled = false;\n    });\n\n    this.logger.info(`setting sending${capitalize[kind]} to false`);\n    this[`sending${capitalize[kind]}`] = false;\n  }\n\n  /**\n   * Compares target directions with senders and receivers and updates PC to match\n   * @returns {undefined}\n   */\n  updateLocalMediaToTargetDirection() {\n    ['audio', 'video'].forEach((kind) => {\n      // Get direction value set when updating senders and receivers\n      const targetDirection = getTargetMediaDirection(this, kind);\n      // Get direction from peer connection\n      const direction = this[`${kind}Direction`];\n      // If directions don't match, update peer connection to match target\n      if (direction !== targetDirection) {\n        const shouldSend = targetDirection.includes('send');\n        if (direction.includes('send') !== shouldSend) {\n          // Update pc senders to correct target direction\n          this.pc.getSenders().forEach((s) => {\n            if (s.track && s.track.kind === kind) {\n              s.track.enabled = shouldSend;\n            }\n          });\n        }\n        const shouldRecv = targetDirection.includes('recv');\n        if (direction.includes('send') !== shouldRecv) {\n          // Update pc receivers to correct target direction\n          this.pc.getReceivers().forEach((r) => {\n            if (r.track && r.track.kind === kind) {\n              r.track.enabled = shouldRecv;\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Resumes sending bits on the identified track. Throws if `kind` does not\n   * identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  unpauseSendingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const senders = this.pc\n      .getSenders()\n      .filter((s) => s.track && s.track.kind === kind);\n\n    if (senders.length === 0) {\n      throw new Error(`No ${kind} media senders to unpause`);\n    }\n\n    senders.forEach((s) => {\n      this.logger.info(`unpausing ${kind} sender`);\n      s.track.enabled = true;\n    });\n\n    this.logger.info(`setting sending${capitalize[kind]} to true`);\n    this[`sending${capitalize[kind]}`] = true;\n  }\n\n  /**\n   * Convenience function. Sets a remote track.enabled=false. Does not\n   * renegotiate.Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  pauseReceivingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const receivers = this.pc\n      .getReceivers()\n      .filter((r) => r.track && r.track.kind === kind);\n\n    if (receivers.length === 0) {\n      throw new Error(`No ${kind} receiver media tracks to pause`);\n    }\n\n\n    receivers.forEach((r) => {\n      this.logger.info(`pausing remote ${kind} track`);\n      r.track.enabled = false;\n    });\n\n    this.logger.info(`setting receiving${capitalize[kind]} to false`);\n    this[`receiving${capitalize[kind]}`] = false;\n  }\n\n  /**\n   * Convenience function. Sets a remote track.enabled=true. Does not\n   * renegotiate.Throws if `kind` does not identify a track.\n   * @param {string} kind\n   * @returns {Promise}\n   */\n  unpauseReceivingMedia(kind) {\n    if (!kind) {\n      throw new Error('kind is required');\n    }\n    const receivers = this.pc\n      .getReceivers()\n      .filter((r) => r.track && r.track.kind === kind);\n\n    if (receivers.length === 0) {\n      throw new Error(`No ${kind} receiver media tracks to pause`);\n    }\n\n    receivers.forEach((r) => {\n      this.logger.info(`unpausing ${kind} receiver track`);\n      r.track.enabled = true;\n    });\n\n    this.logger.info(`setting receiving${capitalize[kind]} to true from ${this[`receiving${capitalize[kind]}`]}`);\n    this[`receiving${capitalize[kind]}`] = true;\n  }\n\n  /**\n   * Stops all tracks and streams, closes the peer connection, and removes all\n   * listeners\n   * @returns {undefined}\n   */\n  stop() {\n    if (this.pc.signalingState !== 'closed') {\n      this.pc.getSenders().forEach((s) => s.track && s.track.stop());\n      this.pc.close();\n    }\n\n    this.pc.onnegotiationneeded = undefined;\n    this.pc.ontrack = undefined;\n    this.pc.onicecandidate = undefined;\n    this.ended = true;\n    this.off();\n  }\n\n  @debounce(500)\n  /**\n   * Debounced helper for triggering `negotiationneeded`.\n   * @private\n   * @returns {undefined}\n   */\n  // It's not missing, but the decorator is throwing off eslint\n  // eslint-disable-next-line require-jsdoc\n  triggerNegotiationNeeded() {\n    this.trigger('negotiationneeded');\n  }\n\n  /**\n   * Returns a string when attempting to serialize object\n   * @returns {string}\n   */\n  serialize() {\n    return 'WebRTCMediaEngine';\n  }\n}\n\nObject.assign(WebRTCMediaEngine.prototype, Events);\n"]}