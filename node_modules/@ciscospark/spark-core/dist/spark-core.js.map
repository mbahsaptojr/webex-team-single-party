{"version":3,"sources":["spark-core.js"],"names":["registerPlugin","registerInternalPlugin","interceptors","SparkTrackingIdInterceptor","create","RequestEventInterceptor","RateLimitInterceptor","RequestLoggerInterceptor","process","env","ENABLE_NETWORK_LOGGING","ENABLE_VERBOSE_NETWORK_LOGGING","undefined","ResponseLoggerInterceptor","RequestTimingInterceptor","UrlInterceptor","SparkUserAgentInterceptor","AuthInterceptor","KmsDryErrorInterceptor","PayloadTransformerInterceptor","ConversationInterceptor","RedirectInterceptor","HttpStatusInterceptor","error","SparkHttpError","NetworkTimingInterceptor","preInterceptors","postInterceptors","SparkCore","AmpState","extend","version","children","internal","SparkInternalCore","constructor","attrs","options","credentials","supertoken","access_token","forEach","path","val","bearerValidator","trim","derived","boundedStorage","deps","fn","unboundedStorage","ready","loaded","_children","reduce","name","session","config","type","default","request","setOnce","sessionId","refresh","transform","direction","object","predicates","payloadTransformer","filter","p","ctx","spark","all","map","test","then","shouldTransform","extract","target","data","d","Boolean","promise","alias","applyNamedTransform","resolve","rest","unshift","args","transforms","tx","getWindow","window","initialize","federation","trigger","onLoaded","stopListening","nextTick","listenToAndRun","onReady","prototype","key","listenTo","addInterceptor","ints","interceptor","push","includes","json","uuid","v4","setConfig","newConfig","token","split","length","console","warn","replace","info","inspect","depth","util","serialize","props","logout","refresh_token","onBeforeLogout","reverse","plugin","catch","err","logger","clear","invalidate","authorization","measure","metrics","sendUnstructured","upload","file","reject","Error","phases","finalize","method","withCredentials","body","headers","shunt","EventEmitter","_uploadPhaseInitialize","_uploadPhaseUpload","_uploadPhaseFinalize","res","debug","_uploadApplySession","opts","phaseOptions","phaseKey","startsWith","substr","NODE_ENV","on","event","total","retry"],"mappings":"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","file":"spark-core.js","sourcesContent":["/*!\n * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {EventEmitter} from 'events';\nimport util from 'util';\n\nimport {proxyEvents, retry, transferEvents} from '@ciscospark/common';\nimport {HttpStatusInterceptor, defaults as requestDefaults} from '@ciscospark/http-core';\nimport {defaults, get, has, isFunction, isString, last, merge, omit, set, unset} from 'lodash';\nimport AmpState from 'ampersand-state';\nimport uuid from 'uuid';\n\nimport AuthInterceptor from './interceptors/auth';\nimport NetworkTimingInterceptor from './interceptors/network-timing';\nimport PayloadTransformerInterceptor from './interceptors/payload-transformer';\nimport RedirectInterceptor from './interceptors/redirect';\nimport RequestEventInterceptor from './interceptors/request-event';\nimport RequestLoggerInterceptor from './interceptors/request-logger';\nimport RequestTimingInterceptor from './interceptors/request-timing';\nimport ResponseLoggerInterceptor from './interceptors/response-logger';\nimport SparkHttpError from './lib/spark-http-error';\nimport SparkTrackingIdInterceptor from './interceptors/spark-tracking-id';\nimport SparkUserAgentInterceptor from './interceptors/spark-user-agent';\nimport RateLimitInterceptor from './interceptors/rate-limit';\nimport config from './config';\nimport {makeSparkStore} from './lib/storage';\nimport mixinSparkCorePlugins from './lib/spark-core-plugin-mixin';\nimport mixinSparkInternalCorePlugins from './lib/spark-internal-core-plugin-mixin';\nimport SparkInternalCore from './spark-internal-core';\n\n// TODO replace the Interceptor.create with Reflect.construct (\n// Interceptor.create exists because new was really hard to call on an array of\n// constructors)\nconst interceptors = {\n  SparkTrackingIdInterceptor: SparkTrackingIdInterceptor.create,\n  RequestEventInterceptor: RequestEventInterceptor.create,\n  RateLimitInterceptor: RateLimitInterceptor.create,\n  /* eslint-disable no-extra-parens */\n  RequestLoggerInterceptor: (process.env.ENABLE_NETWORK_LOGGING || process.env.ENABLE_VERBOSE_NETWORK_LOGGING) ? RequestLoggerInterceptor.create : undefined,\n  ResponseLoggerInterceptor: (process.env.ENABLE_NETWORK_LOGGING || process.env.ENABLE_VERBOSE_NETWORK_LOGGING) ? ResponseLoggerInterceptor.create : undefined,\n  /* eslint-enable no-extra-parens */\n  RequestTimingInterceptor: RequestTimingInterceptor.create,\n  UrlInterceptor: undefined,\n  SparkUserAgentInterceptor: SparkUserAgentInterceptor.create,\n  AuthInterceptor: AuthInterceptor.create,\n  KmsDryErrorInterceptor: undefined,\n  PayloadTransformerInterceptor: PayloadTransformerInterceptor.create,\n  ConversationInterceptor: undefined,\n  RedirectInterceptor: RedirectInterceptor.create,\n  HttpStatusInterceptor() {\n    return HttpStatusInterceptor.create({\n      error: SparkHttpError\n    });\n  },\n  NetworkTimingInterceptor: NetworkTimingInterceptor.create\n};\n\nconst preInterceptors = [\n  'ResponseLoggerInterceptor',\n  'RequestTimingInterceptor',\n  'RequestEventInterceptor',\n  'SparkTrackingIdInterceptor',\n  'RateLimitInterceptor'\n];\n\nconst postInterceptors = [\n  'HttpStatusInterceptor',\n  'NetworkTimingInterceptor',\n  'RequestLoggerInterceptor',\n  'RateLimitInterceptor'\n];\n\n/**\n * @class\n */\nconst SparkCore = AmpState.extend({\n  version: PACKAGE_VERSION,\n\n  children: {\n    internal: SparkInternalCore\n  },\n\n  constructor(attrs = {}, options) {\n    if (typeof attrs === 'string') {\n      attrs = {\n        credentials: {\n          supertoken: {\n            // eslint-disable-next-line camelcase\n            access_token: attrs\n          }\n        }\n      };\n    }\n    else {\n      // Reminder: order is important here\n      [\n        'credentials.authorization',\n        'authorization',\n        'credentials.supertoken.supertoken',\n        'supertoken',\n        'access_token',\n        'credentials.authorization.supertoken'\n      ].forEach((path) => {\n        const val = get(attrs, path);\n        if (val) {\n          unset(attrs, path);\n          set(attrs, 'credentials.supertoken', val);\n        }\n      });\n\n      [\n        'credentials',\n        'credentials.authorization'\n      ]\n        .forEach((path) => {\n          const val = get(attrs, path);\n          if (typeof val === 'string') {\n            unset(attrs, path);\n            set(attrs, 'credentials.supertoken', val);\n          }\n        });\n\n      if (typeof get(attrs, 'credentials.access_token') === 'string') {\n        // Send access_token to get validated and corrected and then set it\n        set(attrs, 'credentials.access_token', this.bearerValidator(get(attrs, 'credentials.access_token').trim()));\n\n        set(attrs, 'credentials.supertoken', attrs.credentials);\n      }\n    }\n\n    return Reflect.apply(AmpState, this, [attrs, options]);\n  },\n\n  derived: {\n    boundedStorage: {\n      deps: [],\n      fn() {\n        return makeSparkStore('bounded', this);\n      }\n    },\n    unboundedStorage: {\n      deps: [],\n      fn() {\n        return makeSparkStore('unbounded', this);\n      }\n    },\n    ready: {\n      deps: ['loaded', 'internal.ready'],\n      fn() {\n        return this.loaded && Object.keys(this._children).reduce((ready, name) => ready && this[name] && this[name].ready !== false, true);\n      }\n    }\n  },\n\n  session: {\n    config: {\n      type: 'object'\n    },\n    /**\n     * When true, indicates that the initial load from the storage layer is\n     * complete\n     * @instance\n     * @memberof SparkCore\n     * @type {boolean}\n     */\n    loaded: {\n      default: false,\n      type: 'boolean'\n    },\n    request: {\n      setOnce: true,\n      // It's supposed to be a function, but that's not a type defined in\n      // Ampersand\n      type: 'any'\n    },\n    sessionId: {\n      setOnce: true,\n      type: 'string'\n    }\n  },\n\n  /**\n   * @instance\n   * @memberof SparkCore\n   * @param {[type]} args\n   * @returns {[type]}\n   */\n  refresh(...args) {\n    return this.credentials.refresh(...args);\n  },\n\n  /**\n   * Applies the directionally appropriate transforms to the specified object\n   * @param {string} direction\n   * @param {Object} object\n   * @returns {Promise}\n   */\n  transform(direction, object) {\n    const predicates = this.config.payloadTransformer.predicates.filter(\n      (p) => !p.direction || p.direction === direction\n    );\n    const ctx = {\n      spark: this\n    };\n    return Promise.all(predicates.map((p) => p.test(ctx, object)\n      .then((shouldTransform) => {\n        if (!shouldTransform) {\n          return undefined;\n        }\n        return p.extract(object)\n          // eslint-disable-next-line max-nested-callbacks\n          .then((target) => ({\n            name: p.name,\n            target\n          }));\n      })))\n      .then((data) => data\n        .filter((d) => Boolean(d))\n        // eslint-disable-next-line max-nested-callbacks\n        .reduce((promise, {name, target, alias}) => promise.then(() => {\n          if (alias) {\n            return this.applyNamedTransform(direction, alias, target);\n          }\n          return this.applyNamedTransform(direction, name, target);\n        }), Promise.resolve()))\n      .then(() => object);\n  },\n\n  /**\n   * Applies the directionally appropriate transform to the specified parameters\n   * @param {string} direction\n   * @param {Object} ctx\n   * @param {string} name\n   * @returns {Promise}\n   */\n  applyNamedTransform(direction, ctx, name, ...rest) {\n    if (isString(ctx)) {\n      rest.unshift(name);\n      name = ctx;\n      ctx = {\n        spark: this,\n        transform: (...args) => this.applyNamedTransform(direction, ctx, ...args)\n      };\n    }\n\n    const transforms = ctx.spark.config.payloadTransformer.transforms.filter(\n      (tx) => tx.name === name && (!tx.direction || tx.direction === direction)\n    );\n    // too many implicit returns on the same line is difficult to interpret\n    // eslint-disable-next-line arrow-body-style\n    return transforms.reduce((promise, tx) => promise.then(() => {\n      if (tx.alias) {\n        return ctx.transform(tx.alias, ...rest);\n      }\n      return Promise.resolve(tx.fn(ctx, ...rest));\n    }), Promise.resolve())\n      .then(() => last(rest));\n  },\n\n  /**\n   * @private\n   * @returns {Window}\n   */\n  getWindow() {\n    // eslint-disable-next-line\n    return window;\n  },\n\n  /**\n   * Initializer\n   *\n   * @emits SparkCore#loaded\n   * @emits SparkCore#ready\n   * @instance\n   * @memberof SparkCore\n   * @param {Object} attrs\n   * @returns {SparkCore}\n   */\n  initialize(attrs = {}) {\n    // Ensure federation is disabled on init\n    delete config.credentials.federation;\n\n    this.config = merge({}, config, attrs.config);\n\n\n    // There's some unfortunateness with the way {@link AmpersandState#children}\n    // get initialized. We'll fire the change:config event so that\n    // {@link SparkPlugin#initialize()} can use\n    // `this.listenToOnce(parent, 'change:config', () => {});` to act on config\n    // during initialization\n    this.trigger('change:config');\n\n    const onLoaded = () => {\n      if (this.loaded) {\n        /**\n         * Fires when all data has been loaded from the storage layer\n         * @event loaded\n         * @instance\n         * @memberof SparkCore\n         */\n        this.trigger('loaded');\n\n        this.stopListening(this, 'change:loaded', onLoaded);\n      }\n    };\n\n    // This needs to run on nextTick or we'll never be able to wire up listeners\n    process.nextTick(() => {\n      this.listenToAndRun(this, 'change:loaded', onLoaded);\n    });\n\n    const onReady = () => {\n      if (this.ready) {\n        /**\n         * Fires when all plugins have fully initialized\n         * @event ready\n         * @instance\n         * @memberof SparkCore\n         */\n        this.trigger('ready');\n\n        this.stopListening(this, 'change:ready', onReady);\n      }\n    };\n\n    // This needs to run on nextTick or we'll never be able to wire up listeners\n    process.nextTick(() => {\n      this.listenToAndRun(this, 'change:ready', onReady);\n    });\n\n    // Make nested events propagate in a consistent manner\n    Object.keys(this.constructor.prototype._children).forEach((key) => {\n      this.listenTo(this[key], 'change', (...args) => {\n        args.unshift(`change:${key}`);\n        this.trigger(...args);\n      });\n    });\n\n    const addInterceptor = (ints, key) => {\n      const interceptor = interceptors[key];\n\n      if (!isFunction(interceptor)) {\n        return ints;\n      }\n\n      ints.push(Reflect.apply(interceptor, this, []));\n\n      return ints;\n    };\n\n    let ints = [];\n    ints = preInterceptors.reduce(addInterceptor, ints);\n    ints = Object.keys(interceptors)\n      .filter((key) => !(preInterceptors.includes(key) || postInterceptors.includes(key)))\n      .reduce(addInterceptor, ints);\n    ints = postInterceptors.reduce(addInterceptor, ints);\n\n    this.request = requestDefaults({\n      json: true,\n      interceptors: ints\n    });\n\n    let sessionId = `${get(this, 'config.trackingIdPrefix', 'spark-js-sdk')}_${get(this, 'config.trackingIdBase', uuid.v4())}`;\n    if (has(this, 'config.trackingIdPrefix')) {\n      sessionId += `_${get(this, 'config.trackingIdPrefix')}`;\n    }\n\n    this.sessionId = sessionId;\n  },\n\n  /**\n   * setConfig\n   *\n   * Allows updating config\n   *\n   * @instance\n   * @memberof SparkCore\n   * @param {Object} newConfig\n   * @returns {null}\n   */\n  setConfig(newConfig = {}) {\n    this.config = merge({}, this.config, newConfig);\n  },\n\n  /**\n   *\n   * Check if access token is correctly formated and correct if it's not\n   * Warn user if token string has errors in it\n   * @param {string} token\n   * @returns {string}\n   */\n  bearerValidator(token) {\n    if (token.includes('Bearer') && token.split(' ').length - 1 === 0) {\n      console.warn(\n        `Your access token does not have a space between 'Bearer' and the token, please add a space to it or replace it with this already fixed version:\\n\\n${token.replace('Bearer', 'Bearer ').replace(/\\s+/g, ' ')}`\n      );\n      console.info(\"Tip: You don't need to add 'Bearer' to the access_token field. The token by itself is fine\");\n\n      return token.replace('Bearer', 'Bearer ').replace(/\\s+/g, ' ');\n    }\n    // Allow elseIf return\n    // eslint-disable-next-line  no-else-return\n    else if (token.split(' ').length - 1 > 1) {\n      console.warn(\n        `Your access token has ${token.split(' ').length - 2} too many spaces, please use this format:\\n\\n${token.replace(/\\s+/g, ' ')}`\n      );\n      console.info(\"Tip: You don't need to add 'Bearer' to the access_token field, the token by itself is fine\");\n      return token.replace(/\\s+/g, ' ');\n    }\n\n    return token.replace(/\\s+/g, ' '); // Clean it anyway (just in case)\n  },\n\n  /**\n   * @instance\n   * @memberof SparkPlugin\n   * @param {number} depth\n   * @private\n   * @returns {Object}\n   */\n  inspect(depth) {\n    return util.inspect(omit(this.serialize({\n      props: true,\n      session: true,\n      derived: true\n    }), 'boundedStorage', 'unboundedStorage', 'request', 'config'), {depth});\n  },\n\n  /**\n   * Invokes all `onBeforeLogout` handlers in the scope of their plugin, clears\n   * all stores, and revokes the access token\n   * Note: If you're using the sdk in a server environment, you may be more\n   * interested in {@link `spark.internal.mercury.disconnect()`| Mercury#disconnect()}\n   * and {@link `spark.internal.device.unregister()`|Device#unregister()}\n   * or {@link `spark.phone.unregister()`|Phone#unregister}\n   * @instance\n   * @memberof SparkCore\n   * @param {Object} options Passed as the first argument to all\n   * `onBeforeLogout` handlers\n   * @returns {Promise}\n   */\n  logout(options, ...rest) {\n    // prefer the refresh token, but for clients that don't have one, fallback\n    // to the access token\n    const token = this.credentials.supertoken && (this.credentials.supertoken.refresh_token || this.credentials.supertoken.access_token);\n    options = Object.assign({token}, options);\n    // onBeforeLogout should be executed in the opposite order in which handlers\n    // were registered. In that way, wdm unregister() will be above mercury\n    // disconnect(), but disconnect() will execute first.\n    // eslint-disable-next-line arrow-body-style\n    return this.config.onBeforeLogout.reverse().reduce((promise, {plugin, fn}) => promise.then(() => {\n      return Promise.resolve(Reflect.apply(fn, this[plugin] || this.internal[plugin], [options, ...rest]))\n        // eslint-disable-next-line max-nested-callbacks\n        .catch((err) => {\n          this.logger.warn(`onBeforeLogout from plugin ${plugin}: failed`, err);\n        });\n    }), Promise.resolve())\n      .then(() => Promise.all([\n        this.boundedStorage.clear(),\n        this.unboundedStorage.clear()\n      ]))\n      .then(() => this.credentials.invalidate(...rest))\n      .then(() => this.authorization && this.authorization.logout && this.authorization.logout(options, ...rest))\n      .then(() => this.trigger('client:logout'));\n  },\n\n  /**\n   * General purpose wrapper to submit metrics via the metrics plugin (if the\n   * metrics plugin is installed)\n   * @instance\n   * @memberof SparkCore\n   * @returns {Promise}\n   */\n  measure(...args) {\n    if (this.metrics) {\n      return this.metrics.sendUnstructured(...args);\n    }\n\n    return Promise.resolve();\n  },\n\n  upload(options) {\n    if (!options.file) {\n      return Promise.reject(new Error('`options.file` is required'));\n    }\n\n    options.phases = options.phases || {};\n    options.phases.initialize = options.phases.initialize || {};\n    options.phases.upload = options.phases.upload || {};\n    options.phases.finalize = options.phases.finalize || {};\n\n    defaults(options.phases.initialize, {\n      method: 'POST'\n    }, omit(options, 'file', 'phases'));\n\n    defaults(options.phases.upload, {\n      method: 'PUT',\n      json: false,\n      withCredentials: false,\n      body: options.file,\n      headers: {\n        'x-trans-id': uuid.v4(),\n        authorization: undefined\n      }\n    });\n\n    defaults(options.phases.finalize, {\n      method: 'POST'\n    }, omit(options, 'file', 'phases'));\n\n    const shunt = new EventEmitter();\n\n    const promise = this._uploadPhaseInitialize(options)\n      .then(() => {\n        const p = this._uploadPhaseUpload(options);\n        transferEvents('progress', p, shunt);\n        return p;\n      })\n      .then((...args) => this._uploadPhaseFinalize(options, ...args))\n      .then((res) => res.body);\n\n    proxyEvents(shunt, promise);\n\n    return promise;\n  },\n\n  _uploadPhaseInitialize: function _uploadPhaseInitialize(options) {\n    this.logger.debug('client: initiating upload session');\n\n    return this.request(options.phases.initialize)\n      .then((...args) => this._uploadApplySession(options, ...args))\n      .then((res) => {\n        this.logger.debug('client: initiated upload session');\n        return res;\n      });\n  },\n\n  _uploadApplySession(options, res) {\n    const session = res.body;\n    ['upload', 'finalize'].reduce((opts, key) => {\n      opts[key] = Object.keys(opts[key]).reduce((phaseOptions, phaseKey) => {\n        if (phaseKey.startsWith('$')) {\n          phaseOptions[phaseKey.substr(1)] = phaseOptions[phaseKey](session);\n          Reflect.deleteProperty(phaseOptions, phaseKey);\n        }\n\n        return phaseOptions;\n      }, opts[key]);\n\n      return opts;\n    }, options.phases);\n  },\n\n  @retry\n  _uploadPhaseUpload(options) {\n    this.logger.debug('client: uploading file');\n\n    const promise = this.request(options.phases.upload)\n      .then((res) => {\n        this.logger.debug('client: uploaded file');\n        return res;\n      });\n\n    proxyEvents(options.phases.upload.upload, promise);\n\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV === 'test') {\n      promise.on('progress', (event) => {\n        this.logger.info('upload progress', event.loaded, event.total);\n      });\n    }\n\n    return promise;\n  },\n\n  _uploadPhaseFinalize: function _uploadPhaseFinalize(options) {\n    this.logger.debug('client: finalizing upload session');\n\n    return this.request(options.phases.finalize)\n      .then((res) => {\n        this.logger.debug('client: finalized upload session');\n        return res;\n      });\n  }\n});\n\nSparkCore.version = PACKAGE_VERSION;\n\nmixinSparkInternalCorePlugins(SparkInternalCore, config, interceptors);\nmixinSparkCorePlugins(SparkCore, config, interceptors);\n\nexport default SparkCore;\n\n/**\n * @method registerPlugin\n * @param {string} name\n * @param {function} constructor\n * @param {Object} options\n * @param {Array<string>} options.proxies\n * @param {Object} options.interceptors\n * @returns {null}\n */\nexport function registerPlugin(name, constructor, options) {\n  SparkCore.registerPlugin(name, constructor, options);\n}\n\n/**\n * Registers plugins used by internal products that do not talk to public APIs.\n * @method registerInternalPlugin\n * @param {string} name\n * @param {function} constructor\n * @param {Object} options\n * @param {Object} options.interceptors\n * @private\n * @returns {null}\n */\nexport function registerInternalPlugin(name, constructor, options) {\n  SparkInternalCore.registerPlugin(name, constructor, options);\n}\n"]}