{"version":3,"sources":["credentials-config.js"],"names":["IDBROKER_BASE_URL","process","env","idbrokerConfig","AmpState","extend","props","url","defaultUrl","identityConfig","IDENTITY_BASE_URL","CredentialsConfig","extraProperties","children","idbroker","identity","authorizationString","CISCOSPARK_AUTHORIZATION_STRING","AUTHORIZATION_STRING","client_id","CISCOSPARK_CLIENT_ID","COMMON_IDENTITY_CLIENT_ID","CLIENT_ID","client_secret","CISCOSPARK_CLIENT_SECRET","COMMON_IDENTITY_CLIENT_SECRET","CLIENT_SECRET","redirect_uri","CISCOSPARK_REDIRECT_URI","COMMON_IDENTITY_REDIRECT_URI","REDIRECT_URI","scope","CISCOSPARK_SCOPE","CISCOSPARK_SCOPES","COMMON_IDENTITY_SCOPE","SCOPE","cisService","derived","activationUrl","deps","fn","authorizeUrl","AUTHORIZE_URL","tokenUrl","TOKEN_URL","revokeUrl","REVOKE_URL","logoutUrl","setPasswordUrl"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,oBAAoBC,QAAQC,GAAR,CAAYF,iBAAZ,IAAiC,4BAA3D;;AAEA;AACA;AACA,IAAMG,iBAAiBC,yBAASC,MAAT,CAAgB;AACrCC,SAAO;AACLC,SAAK,CAAC,QAAD,EAAW,KAAX,EAAkBP,iBAAlB,CADA;AAELQ,gBAAY,CAAC,QAAD,EAAW,KAAX,EAAkBR,iBAAlB;AAFP;AAD8B,CAAhB,CAAvB;;AAOA,IAAMS,iBAAiBL,yBAASC,MAAT,CAAgB;AACrCC,SAAO;AACLC,SAAK,CAAC,QAAD,EAAW,KAAX,EAAkBN,QAAQC,GAAR,CAAYQ,iBAA9B,CADA;AAELF,gBAAY,CAAC,QAAD,EAAW,KAAX,EAAkBP,QAAQC,GAAR,CAAYQ,iBAA9B;AAFP;AAD8B,CAAhB,CAAvB;;AAQA;AACA;AACA;AACA,IAAMC,oBAAoBP,yBAASC,MAAT,CAAgB;;AAExC;AACAO,mBAAiB,OAHuB;;AAKxC;AACA;AACAC,YAAU;;AAER;;;;AAIAC,cAAUX,cANF;;AAQR;;;;AAIAY,cAAUN;;AAZF,GAP8B;;AAuBxCH,SAAO;;AAEL;;;;;AAKAU,yBAAqB,CAAC,QAAD,EAAW,KAAX,EAAkBf,QAAQC,GAAR,CAAYe,+BAAZ,IAA+ChB,QAAQC,GAAR,CAAYgB,oBAA7E,CAPhB;;AASL;;;;AAIAC,eAAW,CAAC,QAAD,EAAW,KAAX,EAAkBlB,QAAQC,GAAR,CAAYkB,oBAAZ,IAAoCnB,QAAQC,GAAR,CAAYmB,yBAAhD,IAA6EpB,QAAQC,GAAR,CAAYoB,SAA3G,CAbN;;AAeL;;;;AAIAC,mBAAe,CAAC,QAAD,EAAW,KAAX,EAAkBtB,QAAQC,GAAR,CAAYsB,wBAAZ,IAAwCvB,QAAQC,GAAR,CAAYuB,6BAApD,IAAqFxB,QAAQC,GAAR,CAAYwB,aAAnH,CAnBV;;AAqBL;;;;AAIAC,kBAAc,CAAC,QAAD,EAAW,KAAX,EAAkB1B,QAAQC,GAAR,CAAY0B,uBAAZ,IAAuC3B,QAAQC,GAAR,CAAY2B,4BAAnD,IAAmF5B,QAAQC,GAAR,CAAY4B,YAAjH,CAzBT;;AA2BL;;;;AAIAC,WAAO,CAAC,QAAD,EAAW,KAAX,EAAkB9B,QAAQC,GAAR,CAAY8B,gBAAZ,IAAgC/B,QAAQC,GAAR,CAAY+B,iBAA5C,IAAiEhC,QAAQC,GAAR,CAAYgC,qBAA7E,IAAsGjC,QAAQC,GAAR,CAAYiC,KAApI,CA/BF;;AAiCL;;;;;AAKAC,gBAAY,CAAC,QAAD,EAAW,KAAX,EAAkB,OAAlB;AAtCP,GAvBiC;;AAgExCC,WAAS;AACP;;;;;AAKAC,mBAAe;AACbC,YAAM,CAAC,cAAD,CADO;AAEbC,QAFa,gBAER;AACH,gBAAU,KAAK1B,QAAL,CAAcP,GAAd,IAAqB,4BAA/B;AACD;AAJY,KANR;;AAcP;;;;;AAKAkC,kBAAc;AACZF,YAAM,CAAC,cAAD,CADM;AAEZC,QAFY,gBAEP;AACH,eAAOvC,QAAQC,GAAR,CAAYwC,aAAZ,IAAgC,KAAK5B,QAAL,CAAcP,GAA9C,6BAAP;AACD;AAJW,KAnBP;;AA0BP;AACA;;;;AAIAoC,cAAU;AACRJ,YAAM,CAAC,cAAD,CADE;AAERC,QAFQ,gBAEH;AACH,eAAOvC,QAAQC,GAAR,CAAY0C,SAAZ,IAA4B,KAAK9B,QAAL,CAAcP,GAA1C,gCAAP;AACD;AAJO,KA/BH;;AAsCP;;;;AAIAsC,eAAW;AACTN,YAAM,CAAC,cAAD,CADG;AAETC,QAFS,gBAEJ;AACH,eAAOvC,QAAQC,GAAR,CAAY4C,UAAZ,IAA6B,KAAKhC,QAAL,CAAcP,GAA3C,0BAAP;AACD;AAJQ,KA1CJ;;AAiDP;;;;AAIAwC,eAAW;AACTR,YAAM,CAAC,cAAD,CADG;AAETC,QAFS,gBAEJ;AACH,eAAU,KAAK1B,QAAL,CAAcP,GAAxB;AACD;AAJQ,KArDJ;;AA4DP;;;;AAIAyC,oBAAgB;AACdT,YAAM,CAAC,cAAD,CADQ;AAEdC,QAFc,gBAET;AACH,gBAAU,KAAKzB,QAAL,CAAcR,GAAd,IAAqB,4BAA/B;AACD;AAJa;;AAhET;;AAhE+B,CAAhB,CAA1B;;kBA2IeI,iB","file":"credentials-config.js","sourcesContent":["import AmpState from 'ampersand-state';\n\nconst IDBROKER_BASE_URL = process.env.IDBROKER_BASE_URL || 'https://idbroker.webex.com';\n\n// Objects to hold current idbroker and identity base host names\n// while keeping around what the default was\nconst idbrokerConfig = AmpState.extend({\n  props: {\n    url: ['string', false, IDBROKER_BASE_URL],\n    defaultUrl: ['string', false, IDBROKER_BASE_URL]\n  }\n});\n\nconst identityConfig = AmpState.extend({\n  props: {\n    url: ['string', false, process.env.IDENTITY_BASE_URL],\n    defaultUrl: ['string', false, process.env.IDENTITY_BASE_URL]\n  }\n});\n\n\n// The credentials config which includes the CI server info and derived\n// URL properties from them for the various CI services.  The URL's\n// will be updated when the CI changes.\nconst CredentialsConfig = AmpState.extend({\n\n  // we need to allow extra props for dynamic props like jwtRefreshCallback\n  extraProperties: 'allow',\n\n  // CI info as children so Ampersand updates cache and derived props\n  // The defaults for these are set when put in the config object below\n  children: {\n\n    /**\n      * The idbroker base host name\n      * @type {string}\n      */\n    idbroker: idbrokerConfig,\n\n    /**\n      * The identity base host name\n      * @type {string}\n      */\n    identity: identityConfig\n\n  },\n\n  props: {\n\n    /**\n      * This is the authorization url displayed on the\n      * {@link developer portal|https://developer.ciscospark.com}\n      * @type {string}\n      */\n    authorizationString: ['string', false, process.env.CISCOSPARK_AUTHORIZATION_STRING || process.env.AUTHORIZATION_STRING],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_id: ['string', false, process.env.CISCOSPARK_CLIENT_ID || process.env.COMMON_IDENTITY_CLIENT_ID || process.env.CLIENT_ID],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    client_secret: ['string', false, process.env.CISCOSPARK_CLIENT_SECRET || process.env.COMMON_IDENTITY_CLIENT_SECRET || process.env.CLIENT_SECRET],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    redirect_uri: ['string', false, process.env.CISCOSPARK_REDIRECT_URI || process.env.COMMON_IDENTITY_REDIRECT_URI || process.env.REDIRECT_URI],\n\n    /**\n      * {@see https://tools.ietf.org/html/rfc6749#section-4.1.4}\n      * @type {string}\n      */\n    scope: ['string', false, process.env.CISCOSPARK_SCOPE || process.env.CISCOSPARK_SCOPES || process.env.COMMON_IDENTITY_SCOPE || process.env.SCOPE],\n\n    /**\n      * Controls the UI of the CI login page.\n      * @private\n      * @type {string}\n      */\n    cisService: ['string', false, 'spark']\n  },\n\n  derived: {\n    /**\n      * User activation URL\n      * {@link config.credentials.activationUrl}\n      * @type {string}\n      */\n    activationUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return `${this.idbroker.url || 'https://idbroker.webex.com'}/idb/token/v1/actions/UserActivation/invoke`;\n      }\n    },\n\n\n    /**\n      * Authorization URL which prompts for user's password. Inferred from\n      * {@link config.credentials.authorizationString}\n      * @type {string}\n      */\n    authorizeUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.AUTHORIZE_URL || `${this.idbroker.url}/idb/oauth2/v1/authorize`;\n      }\n    },\n\n    // TODO does hydra also have an access_token endpoint?\n    /**\n      * Token URL used for token refresh and auth code exchange\n      * @type {string}\n      */\n    tokenUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.TOKEN_URL || `${this.idbroker.url}/idb/oauth2/v1/access_token`;\n      }\n    },\n\n    /**\n      * URL to revoke token\n      * @type {string}\n      */\n    revokeUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return process.env.REVOKE_URL || `${this.idbroker.url}/idb/oauth2/v1/revoke`;\n      }\n    },\n\n    /**\n      * URL to load when the app logs out\n      * @type {string}\n      */\n    logoutUrl: {\n      deps: ['idbroker.url'],\n      fn() {\n        return `${this.idbroker.url}/idb/oauth2/v1/logout`;\n      }\n    },\n\n    /**\n      * Set password URL\n      * @type {string}\n      */\n    setPasswordUrl: {\n      deps: ['identity.url'],\n      fn() {\n        return `${this.identity.url || 'https://identity.webex.com'}/identity/scim/v1/Users`;\n      }\n    }\n\n  }\n\n});\n\nexport default CredentialsConfig;\n\n"]}