import {LOCUS_ID, INCOMING, CREATED, LOCUSEVENT, CORRELATION_ID} from '../constants';
import MeetingCollection from './collection';

const MeetingsUtil = {};

MeetingsUtil.extractDestination = (destination, type) => {
  let dest = destination;
  if (type === LOCUS_ID) {
    if (!(destination && destination.url)) {
      throw new Error('You cannot create a meeting by locus without a locus.url defined');
    }
    const temp = destination.url.split('/');
    dest = temp[temp.length - 1];
  }
  return dest;
};

MeetingsUtil.getMeetingAddedType = (type) => (type === LOCUS_ID ? INCOMING : CREATED);

MeetingsUtil.handleRoapMercury = (envelope) => {
  const {data} = envelope;
  const {eventType} = data;
  if (eventType === LOCUSEVENT.MESSAGE_ROAP) {
    const meeting = MeetingCollection.getByKey(CORRELATION_ID, data.correlationId);
    if (meeting) {
      meeting.roap.roapEvent(data);
    }
    else {
      console.error('no meeting associated to roap event');
      // This should never happen
    }
  }
};

export default MeetingsUtil;
