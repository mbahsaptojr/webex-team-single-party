{"version":3,"sources":["intent-to-join.js"],"names":["IntentToJoinError","error","message","ERROR_DICTIONARY","INTENT_TO_JOIN","MESSAGE","name","NAME","sdkMessage","joinIntentRequired","code","CODE","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAGqBA,iB;;;AACnB;;;;;;AAMA,6BAAYC,KAAZ,EAAsE;AAAA,QAAnDC,OAAmD,uEAAzCC,4BAAiBC,cAAjB,CAAgCC,OAAS;AAAA;;AAAA,4JAC9DH,OAD8D;;AAEpE,UAAKI,IAAL,GAAYH,4BAAiBC,cAAjB,CAAgCG,IAA5C;AACA,UAAKC,UAAL,GAAkBL,4BAAiBC,cAAjB,CAAgCC,OAAlD;AACA,UAAKJ,KAAL,GAAaA,KAAb;AACA,UAAKQ,kBAAL,GAA0B,IAA1B;AACA,UAAKC,IAAL,GAAYP,4BAAiBC,cAAjB,CAAgCO,IAA5C;AANoE;AAOrE;;;qBAd4CC,K;;kBAA1BZ,iB","file":"intent-to-join.js","sourcesContent":["import {ERROR_DICTIONARY} from '../constants';\n\n/**\n * Extended Error object to signify the intent to join for unclaimed PMR scenarios\n */\nexport default class IntentToJoinError extends Error {\n  /**\n  *\n  * @param {Object} error\n  * @param {String} message\n  * @returns {Error}\n  */\n  constructor(error, message = ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE) {\n    super(message);\n    this.name = ERROR_DICTIONARY.INTENT_TO_JOIN.NAME;\n    this.sdkMessage = ERROR_DICTIONARY.INTENT_TO_JOIN.MESSAGE;\n    this.error = error;\n    this.joinIntentRequired = true;\n    this.code = ERROR_DICTIONARY.INTENT_TO_JOIN.CODE;\n  }\n}\n"]}