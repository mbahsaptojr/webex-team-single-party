{"version":3,"sources":["index.js"],"names":["ReconnectionManager","meeting","status","RECONNECTION","STATE","DEFAULT_STATUS","tryCount","DEFAULT_TRY_COUNT","configure","backOff","config","reconnection","retry","start","enabled","locusInfo","fullState","state","ACTIVE","active","spark","internal","mercury","connected","COMPLETE","ReconnectionError","Error","validatedReconnect","validate","execute","reject","IN_PROGRESS","media","then","console","info","Date","resolve","catch","err","times","FAILURE","setTimeout","reconnect","rate","addMedia","mediaSettings","mediaProperties","mediaDirection","error","cleanup","localStream","localShare","PeerConnectionManager","close","mediaPeerConnection","sharePeerConnection","unsetPeerConnections"],"mappings":"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","file":"index.js","sourcesContent":["/*!\n * Copyright (c) 2015-2018 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {ACTIVE, RECONNECTION} from '../constants';\nimport ReconnectionError from '../errors/reconnection';\nimport PeerConnectionManager from '../peer-connection-manager';\n\n/**\n * @export\n * @class ReconnectionManager\n*/\nexport default class ReconnectionManager {\n  /**\n   * @param {Meeting} meeting\n   */\n  constructor(meeting) {\n    this.status = RECONNECTION.STATE.DEFAULT_STATUS;\n    this.tryCount = RECONNECTION.STATE.DEFAULT_TRY_COUNT;\n    this.configure(meeting);\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @returns {undefined}\n   */\n  configure(meeting) {\n    this.backOff = meeting.config.reconnection.retry.backOff.start;\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  reset() {\n    this.status = RECONNECTION.STATE.DEFAULT_STATUS;\n    this.tryCount = RECONNECTION.STATE.DEFAULT_TRY_COUNT;\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @returns {Boolean}\n   * @returns {ReconnectionError}\n   */\n  validate(meeting) {\n    if (meeting.config.reconnection.enabled) {\n      if (\n        meeting.locusInfo\n          && meeting.locusInfo.fullState\n          && (\n            meeting.locusInfo.fullState.state === ACTIVE\n            && meeting.locusInfo.fullState.active\n          )\n      ) {\n        if (meeting.spark.internal.mercury.connected) {\n          if (\n            this.status !== RECONNECTION.STATE.DEFAULT_STATUS\n            || this.status !== RECONNECTION.STATE.COMPLETE\n          ) {\n            return true;\n          }\n          return new ReconnectionError(new Error('Multiple reconnections cannot occur concurrently'));\n        }\n        return new ReconnectionError(new Error('mercury is not connected, cannot reconnect'));\n      }\n      return new ReconnectionError(new Error('locus server for this call is not active, cannot reconnect'));\n    }\n    return new ReconnectionError(new Error('Reconnection is not enabled.'));\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @returns {Promise}\n   */\n  reconnect(meeting) {\n    const validatedReconnect = this.validate(meeting);\n    return validatedReconnect === true ? this.execute(meeting) : Promise.reject(validatedReconnect);\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @returns {Promise}\n   */\n  execute(meeting) {\n    this.status = RECONNECTION.STATE.IN_PROGRESS;\n    return this.media(meeting)\n      .then((media) => {\n        console.info(`Reconnection->Media reestablished at: ${new Date()}`);\n        this.status = RECONNECTION.STATE.COMPLETE;\n        return Promise.resolve(media);\n      })\n      .catch((err) => { // eslint-disable-line\n        console.info(`Reconnection->Media reestablishment failed at: ${new Date()}`);\n        if (this.tryCount > meeting.config.reconnection.retry.times) {\n          this.status = RECONNECTION.STATE.FAILURE;\n          return Promise.reject(new ReconnectionError(err));\n        }\n        // exponential backoff and retry logic\n        setTimeout(() =>\n          this.reconnect(meeting),\n        this.backOff *= meeting.config.reconnection.retry.backOff.rate);\n      });\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @returns {Promise} see #Meeting.addMedia\n   */\n  media(meeting) {\n    this.tryCount += 1;\n    console.info(`Reconnection->Re-establishing media at: ${new Date()}`);\n    // create an offer\n    return meeting.addMedia({\n      mediaSettings: meeting.mediaProperties.mediaDirection\n    }).then((media) => Promise.resolve(media))\n      .catch((err) => {\n        console.error('Could not re use peer connections for the media.', err);\n        // TODO: test getting to this scenario\n        ReconnectionManager.cleanup(meeting);\n        return meeting.addMedia({\n          mediaSettings: meeting.mediaProperties.mediaDirection,\n          localStream: meeting.mediaProperties.localStream,\n          localShare: meeting.mediaProperties.localShare\n        });\n      });\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @returns {undefined}\n   */\n  static cleanup(meeting) {\n    // close pcs, unset to null and reuse the streams with new pcs\n    PeerConnectionManager.close(meeting.mediaProperties.mediaPeerConnection);\n    PeerConnectionManager.close(meeting.mediaProperties.sharePeerConnection);\n    meeting.mediaProperties.unsetPeerConnections();\n  }\n}\n"]}