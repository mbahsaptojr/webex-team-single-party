{"version":3,"sources":["util.js"],"names":["MembersUtil","generateAddMemberOptions","invitee","locusUrl","alertIfActive","generateAdmitMemberOptions","memberIds","getAddMemberBody","options","invitees","address","emailAddress","email","getAdmitMemberRequestBody","admit","getAdmitMemberRequestParams","format","body","method","PUT","uri","CONTROLS","getAddMemberRequestParams","requestParams"],"mappings":";;;;;;AAAA;;AAKA,IAAMA,cAAc,EAApB;;AAEA;;;;;;AAMAA,YAAYC,wBAAZ,GAAuC,UAACC,OAAD,EAAUC,QAAV,EAAoBC,aAApB;AAAA,SAAuC;AAC5EF,oBAD4E;AAE5EC,sBAF4E;AAG5EC;AAH4E,GAAvC;AAAA,CAAvC;;AAMA;;;;;AAKAJ,YAAYK,0BAAZ,GAAyC,UAACC,SAAD,EAAYH,QAAZ;AAAA,SAA0B;AACjEA,sBADiE;AAEjEG;AAFiE,GAA1B;AAAA,CAAzC;;AAKA;;;;AAIAN,YAAYO,gBAAZ,GAA+B,UAACC,OAAD;AAAA,SAAc;AAC3CC,cAAU,CACR;AACEC,eAASF,QAAQN,OAAR,CAAgBS,YAAhB,IAAgCH,QAAQN,OAAR,CAAgBU;AAD3D,KADQ,CADiC;AAM3CR,mBAAeI,QAAQJ;AANoB,GAAd;AAAA,CAA/B;;AASA;;;;AAIAJ,YAAYa,yBAAZ,GAAwC,UAACL,OAAD;AAAA,SAAc;AACpDM,WAAO,EAACR,WAAWE,QAAQF,SAApB;AAD6C,GAAd;AAAA,CAAxC;;AAIA;;;;AAIAN,YAAYe,2BAAZ,GAA0C,UAACC,MAAD,EAAY;AACpD,MAAMC,OAAOjB,YAAYa,yBAAZ,CAAsCG,MAAtC,CAAb;AACA,SAAO;AACLE,YAAQC,cADH;AAELC,SAAQJ,OAAOb,QAAf,SAA2BkB,mBAFtB;AAGLJ;AAHK,GAAP;AAKD,CAPD;;AASA;;;;AAIAjB,YAAYsB,yBAAZ,GAAwC,UAACN,MAAD,EAAY;AAClD,MAAMC,OAAOjB,YAAYO,gBAAZ,CAA6BS,MAA7B,CAAb;AACA,MAAMO,gBAAgB;AACpBL,YAAQC,cADY;AAEpBC,SAAKJ,OAAOb,QAFQ;AAGpBc;AAHoB,GAAtB;AAKA,SAAOM,aAAP;AACD,CARD;;kBAUevB,W","file":"util.js","sourcesContent":["import {\n  PUT,\n  CONTROLS\n} from '../constants';\n\nconst MembersUtil = {};\n\n/**\n * @param {Object} invitee with emailAddress or email\n * @param {String} locusUrl\n * @param {Boolean} alertIfActive\n * @returns {Object} the format object\n */\nMembersUtil.generateAddMemberOptions = (invitee, locusUrl, alertIfActive) => ({\n  invitee,\n  locusUrl,\n  alertIfActive\n});\n\n/**\n * @param {Array} memberIds\n * @param {String} locusUrl\n * @returns {Object} the format object\n */\nMembersUtil.generateAdmitMemberOptions = (memberIds, locusUrl) => ({\n  locusUrl,\n  memberIds\n});\n\n/**\n * @param {Object} options with {invitee: {emailAddress, email}, alertIfActive}\n * @returns {Object} with {invitees: [{address}], alertIfActive}\n */\nMembersUtil.getAddMemberBody = (options) => ({\n  invitees: [\n    {\n      address: options.invitee.emailAddress || options.invitee.email\n    }\n  ],\n  alertIfActive: options.alertIfActive\n});\n\n/**\n * @param {Object} options with {memberIds}\n * @returns {Object} admit with {memberIds}\n */\nMembersUtil.getAdmitMemberRequestBody = (options) => ({\n  admit: {memberIds: options.memberIds}\n});\n\n/**\n * @param {Object} format with {memberIds, locusUrl}\n * @returns {Object} the request parameters (method, uri, body) needed to make a admitMember request\n */\nMembersUtil.getAdmitMemberRequestParams = (format) => {\n  const body = MembersUtil.getAdmitMemberRequestBody(format);\n  return {\n    method: PUT,\n    uri: `${format.locusUrl}/${CONTROLS}`,\n    body\n  };\n};\n\n/**\n * @param {Object} format with {invitee {emailAddress, email}, locusUrl, alertIfActive}\n * @returns {Object} the request parameters (method, uri, body) needed to make a addMember request\n */\nMembersUtil.getAddMemberRequestParams = (format) => {\n  const body = MembersUtil.getAddMemberBody(format);\n  const requestParams = {\n    method: PUT,\n    uri: format.locusUrl,\n    body\n  };\n  return requestParams;\n};\n\nexport default MembersUtil;\n"]}