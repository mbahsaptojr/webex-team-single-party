{"version":3,"sources":["index.js"],"names":["WebRTCStats","attrs","options","optionalCreateOptions","namespace","MEETINGS","media","undefined","screen","withMedia","withScreen","MeetingStats","StatelessSparkPlugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;AAEA;;;IAGqBA,W;;;AAGnB;;;;;;AAME,uBAAYC,KAAZ,EAAmBC,OAAnB,EAA4BC,qBAA5B,EAAmD;AAAA;;AAAA,gJAC3C,EAD2C,EACvCD,OADuC;;AAAA,UARnDE,SAQmD,GARvCC,mBAQuC;;AAEjD,UAAKJ,KAAL,GAAaA,KAAb;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKI,KAAL,GAAaC,SAAb;AACA,UAAKC,MAAL,GAAcD,SAAd;AACA,QAAIJ,yBAAyBA,sBAAsBG,KAAnD,EAA0D;AACxD,YAAKG,SAAL,CAAeN,sBAAsBG,KAArC;AACD;AACD,QAAIH,yBAAyBA,sBAAsBK,MAAnD,EAA2D;AACzD,YAAKE,UAAL,CAAgBP,sBAAsBK,MAAtC;AACD;AAXgD;AAYlD;;AAEH;;;;;;;4BAGU;AACN,aAAO,IAAP;AACD;;AAEH;;;;;;;;8BAKYN,O,EAAS;AACjB,WAAKI,KAAL,GAAa,IAAIK,eAAJ,CAAiB,KAAKV,KAAtB,EAA6B,KAAKC,OAAlC,EAA2CA,OAA3C,CAAb;AACA,aAAO,IAAP;AACD;;AAEH;;;;;;;;+BAKaA,O,EAAS;AAClB,WAAKM,MAAL,GAAc,IAAIG,eAAJ,CAAiB,KAAKV,KAAtB,EAA6B,KAAKC,OAAlC,EAA2CA,OAA3C,CAAd;AACA,aAAO,IAAP;AACD;;AAEH;;;;;;;6BAIWI,K,EAAO;AACd,WAAKA,KAAL,GAAaA,KAAb;AACD;;AAEH;;;;;;;8BAIYE,M,EAAQ;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD;;AAEH;;;;;;+BAGa;AACT,aAAO,KAAKF,KAAZ;AACD;;AAEH;;;;;;gCAGc;AACV,aAAO,KAAKE,MAAZ;AACD;;;EA9EoCI,+B;;kBAApBZ,W","file":"index.js","sourcesContent":["import {StatelessSparkPlugin} from '@ciscospark/spark-core';\n\nimport {MEETINGS} from '../constants';\nimport MeetingStats from '../stats/stats';\n\n/**\n * @class WebRTCStats\n */\nexport default class WebRTCStats extends StatelessSparkPlugin {\n    namespace = MEETINGS;\n\n  /**\n    *\n    * @param {Object} attrs\n    * @param {Object} options\n    * @param {Object} optionalCreateOptions - optional {media: {}, screen: {}, see MeetingStats options}\n   */\n    constructor(attrs, options, optionalCreateOptions) {\n      super({}, options);\n      this.attrs = attrs;\n      this.options = options;\n      this.media = undefined;\n      this.screen = undefined;\n      if (optionalCreateOptions && optionalCreateOptions.media) {\n        this.withMedia(optionalCreateOptions.media);\n      }\n      if (optionalCreateOptions && optionalCreateOptions.screen) {\n        this.withScreen(optionalCreateOptions.screen);\n      }\n    }\n\n  /**\n   * @returns {WebRTCStats}\n   */\n    build() {\n      return this;\n    }\n\n  /**\n   * constructs a MeetingStats object on this instance for media stream\n   * @param {Object} options - optional, see MeetingStats options\n   * @returns {WebRTCStats}\n   */\n    withMedia(options) {\n      this.media = new MeetingStats(this.attrs, this.options, options);\n      return this;\n    }\n\n  /**\n   * constructs a interval object on this instance\n   * @param {Object} options - optional, see MeetingStats options\n   * @returns {WebRTCStats}\n   */\n    withScreen(options) {\n      this.screen = new MeetingStats(this.attrs, this.options, options);\n      return this;\n    }\n\n  /**\n   * @param {MeetingStats} media\n   * @returns {undefined}\n   */\n    setMedia(media) {\n      this.media = media;\n    }\n\n  /**\n   * @param {MeetingStats} screen\n   * @returns {undefined}\n   */\n    setScreen(screen) {\n      this.screen = screen;\n    }\n\n  /**\n   * @returns {MeetingStats}\n   */\n    getMedia() {\n      return this.media;\n    }\n\n  /**\n   * @returns {MeetingStats}\n   */\n    getScreen() {\n      return this.screen;\n    }\n}\n"]}