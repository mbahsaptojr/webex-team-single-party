{"version":3,"sources":["stats.js"],"names":["MeetingStats","attrs","options","optionalCreateOptions","namespace","MEETINGS","history","undefined","interval","aggregator","stream","filter","events","id","withHistory","withInterval","withAggregator","withFilter","withStream","withEvents","withId","data","addHistory","updateInterval","aggregate","event","cbFn","Error","on","filtered","doHistory","doInterval","doAggregator","doEvents","StatsEvents","setEvents","StatsHistory","setHistory","StatsAggregator","setAggregator","StatsInterval","setInterval","peerConnection","StatsStream","setStream","StatsFilter","setFilter","pipe","setId","guid","uuid","v4","StatelessSparkPlugin"],"mappings":"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","file":"stats.js","sourcesContent":["import {StatelessSparkPlugin} from '@ciscospark/spark-core';\nimport uuid from 'uuid';\n\nimport {MEETINGS} from '../constants';\nimport StatsHistory from '../stats/history';\nimport StatsAggregator from '../stats/aggregator';\nimport StatsInterval from '../stats/interval';\nimport StatsStream from '../stats/stream';\nimport StatsFilter from '../stats/filter';\nimport StatsEvents from '../stats/events';\n\n/**\n * @class MeetingStats\n */\nexport default class MeetingStats extends StatelessSparkPlugin {\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} attrs\n   * @param {Object} options\n   * @param {Object} optionalCreateOptions {history: true/false, interval: true/false, aggregator: true/false, stream: RTCPeerConnection, filter: PeerConnection, events: true/false, id: true/false} // if filter is set do not set stream\n   */\n  constructor(attrs, options, optionalCreateOptions) {\n    super({}, options);\n    this.attrs = attrs;\n    this.options = options;\n    // usable values\n    this.history = undefined;\n    this.interval = undefined;\n    this.aggregator = undefined;\n    this.stream = undefined;\n    this.filter = undefined;\n    this.events = undefined;\n    this.id = undefined;\n    if (optionalCreateOptions && optionalCreateOptions.history) {\n      this.withHistory();\n    }\n    if (optionalCreateOptions && optionalCreateOptions.interval) {\n      this.withInterval();\n    }\n    if (optionalCreateOptions && optionalCreateOptions.aggregator) {\n      this.withAggregator();\n    }\n    if (optionalCreateOptions && optionalCreateOptions.filter && !optionalCreateOptions.stream) {\n      this.withFilter(optionalCreateOptions.filter);\n    }\n    if (optionalCreateOptions && optionalCreateOptions.stream && !optionalCreateOptions.filter) {\n      this.withStream(optionalCreateOptions.stream);\n    }\n    if (optionalCreateOptions && optionalCreateOptions.events) {\n      this.withEvents(optionalCreateOptions.events);\n    }\n    if (optionalCreateOptions && optionalCreateOptions.id) {\n      this.withId();\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   */\n  doHistory(data) {\n    if (this.history) {\n      this.history.addHistory(data);\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   */\n  doInterval(data) {\n    if (this.interval) {\n      this.interval.updateInterval(data);\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   */\n  doAggregator(data) {\n    if (this.aggregator) {\n      this.aggregator.aggregate(data);\n    }\n  }\n\n  /**\n   * @param {WebRTCData} data\n   * @returns {undefined}\n   */\n  doEvents(data) {\n    if (this.events) {\n      this.events.event(data);\n    }\n  }\n\n  /**\n   * does all the work for the built properties\n   * calls back a function with data from piped stream filter\n   * @param {Function} cbFn\n   * @returns {undefined}\n   * @throws {Error} if the filter stream does not exist\n   */\n  onData(cbFn) {\n    if (!this.filter) {\n      throw new Error('The stats peer connection filter must be set up before data can be worked upon.');\n    }\n    this.filter.on('data', (filtered) => {\n      this.doHistory(filtered);\n      this.doInterval(filtered);\n      this.doAggregator(filtered);\n      this.doEvents(filtered);\n      if (cbFn) {\n        cbFn(filtered);\n      }\n    });\n  }\n\n  /**\n   * constructs an event object on this instance\n   * @param {String} id - the event payloads will all be sent with this id\n   * @returns {MeetingStats}\n   */\n  withEvents() {\n    const events = new StatsEvents(this.attrs, this.options);\n    this.setEvents(events);\n    return this;\n  }\n\n  /**\n   * constructs a history object on this instance\n   * @returns {MeetingStats}\n   */\n  withHistory() {\n    const history = new StatsHistory();\n    this.setHistory(history);\n    return this;\n  }\n\n  /**\n   * constructs a aggregator object on this instance\n   * @returns {MeetingStats}\n   */\n  withAggregator() {\n    const aggregator = new StatsAggregator();\n    this.setAggregator(aggregator);\n    return this;\n  }\n\n  /**\n   * constructs a interval object on this instance\n   * @returns {MeetingStats}\n   */\n  withInterval() {\n    const interval = new StatsInterval();\n    this.setInterval(interval);\n    return this;\n  }\n\n  /**\n   * constructs a stream object on this instance\n   * @param {RTCPeerConnection} peerConnection\n   * @returns {MeetingStats}\n   */\n  withStream(peerConnection) {\n    const stream = new StatsStream(peerConnection);\n    this.setStream(stream);\n    return this;\n  }\n\n  /**\n   * constructs a stream object on this instance\n   * adds a filter on that stream, and pipes the stream into the filter\n   * @param {RTCPeerConnection} peerConnection\n   * @returns {MeetingStats}\n   */\n  withFilter(peerConnection) {\n    const stream = new StatsStream(peerConnection);\n    this.setStream(stream);\n    const filter = new StatsFilter();\n    this.setFilter(filter);\n    stream.pipe(filter);\n    return this;\n  }\n\n  /**\n   * constructs an id to match this stats object\n   * takes params as precedence\n   * @param {String} id\n   * @returns {MeetingStats}\n   */\n  withId(id) {\n    if (id) {\n      this.setId(id);\n      return this;\n    }\n    const guid = uuid.v4();\n    this.setId(guid);\n    return this;\n  }\n\n  /**\n   * @returns {MeetingStats}\n   */\n  build() {\n    return this;\n  }\n\n  /**\n   * @param {String} id\n   * @returns {undefined}\n   */\n  setId(id) {\n    this.id = id;\n  }\n\n  /**\n   * @param {StatsHistory} history\n   * @returns {undefined}\n   */\n  setHistory(history) {\n    this.history = history;\n  }\n\n  /**\n   * @param {StatsInterval} interval\n   * @returns {undefined}\n   */\n  setInterval(interval) {\n    this.interval = interval;\n  }\n\n  /**\n   * @param {StatsAggregator} aggregator\n   * @returns {undefined}\n   */\n  setAggregator(aggregator) {\n    this.aggregator = aggregator;\n  }\n\n  /**\n   * @param {StatsEvent} events\n   * @returns {undefined}\n   */\n  setEvents(events) {\n    this.events = events;\n  }\n\n  /**\n   * @param {Readable} stream\n   * @returns {undefined}\n   */\n  setStream(stream) {\n    this.stream = stream;\n  }\n\n  /**\n   * @param {Transform} filter\n   * @returns {undefined}\n   */\n  setFilter(filter) {\n    this.filter = filter;\n  }\n\n  /**\n   * @returns {String}\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * @returns {StatsHistory}\n   */\n  getHistory() {\n    return this.history;\n  }\n\n  /**\n   * @returns {StatsInterval}\n   */\n  getInterval() {\n    return this.interval;\n  }\n\n  /**\n   * @returns {StatsAggregator}\n   */\n  getAggregator() {\n    return this.aggregator;\n  }\n\n  /**\n   * @returns {StatsEvents}\n   */\n  getEvents() {\n    return this.events;\n  }\n\n  /**\n   * @returns {Readable}\n   */\n  getStream() {\n    return this.stream;\n  }\n\n  /**\n   * @returns {Transform}\n   */\n  getFilter() {\n    return this.filter;\n  }\n}\n"]}