'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _constants = require('../constants');

var InfoUtils = {};

InfoUtils.parse = function (info) {
  return {
    policy: InfoUtils.parsePolicy(info),
    type: InfoUtils.parseMeetingType(info),
    sipUri: info.sipUri
  };
};
InfoUtils.parsePolicy = function (info) {
  var policy = {};
  // Parses the policy to show valid uses
  if (info.displayHints && info.displayHints.joined && info.displayHints.joined.length > 0) {
    // TODO: find a better way
    info.displayHints.joined.forEach(function (key) {
      policy[key] = true;
    });
  }
  return policy;
};

InfoUtils.parseMeetingType = function (info) {
  var type = _constants.UNKNOWN;
  // Parse all the value and get the type of meeting
  // 1:1 meeting
  if (info.locusTags && info.locusTags.indexOf(_constants.ONE_ON_ONE) >= 0) {
    return _constants.ONE_ON_ONE;
  }
  if (info.locusTags && info.locusTags.indexOf(_constants.MEETING) >= 0) {
    type = _constants.MEETING;
  }
  // For webex meeting claimed or unclaimed or calender meeting with webex site
  if (info.webexServiceType === _constants.MEETING_CENTER || info.isPmr) {
    return _constants.WEBEX_MEETING;
  }
  return type;
};

exports.default = InfoUtils;
//# sourceMappingURL=infoUtils.js.map
