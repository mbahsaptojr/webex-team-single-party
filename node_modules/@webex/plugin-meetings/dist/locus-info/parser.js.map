{"version":3,"sources":["parser.js"],"names":["Parser","updateWithDeltaLocus","deltaLocus","meeting","sequence","rangeStart","rangeEnd","entries","locusInfo","baseSequence","meetingRequest","getFullLocus","desync","locusUrl","then","res","body","onFullLocus","DELTAEVENT","EQ","resBase","LocusUtil","compareLocus","GT","syncUrl","LT","CF","fullState","state","length","console","log","locusDesync","needToGetFullLocus","generateSyncDebugFlag","syncMeeting","info","onDeltaLocus","LOCUS","STATE","INACTIVE","catch","err","error"],"mappings":"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","file":"parser.js","sourcesContent":["import {min} from 'lodash';\n\nimport LocusUtil from '../locus-info/utils';\nimport {DELTAEVENT, LOCUS} from '../constants';\n\nconst Parser = {};\n\n// https://sqbu-github.cisco.com/WebExSquared/cloud-apps/wiki/Locus-Delta-Events\nParser.updateWithDeltaLocus = (deltaLocus, meeting) => {\n  if (!(deltaLocus.sequence && (deltaLocus.sequence.rangeStart <= deltaLocus.sequence.rangeEnd) && (deltaLocus.sequence.rangeEnd <= min(deltaLocus.sequence.entries)))) {\n    return null;\n  }\n\n  // Its a new meeting and has incomplete information\n  if (!meeting.locusInfo.baseSequence) {\n    return meeting.meetingRequest.getFullLocus({\n      desync: true,\n      locusUrl: meeting.locusUrl\n    }).then((res) => {\n      res.body.baseSequence = deltaLocus.baseSequence; // TODO: verify baseSequence age and update as necessary\n      meeting.locusInfo.onFullLocus(res.body);\n      return DELTAEVENT.EQ;\n    });\n  }\n\n  // THIS IS A NEW MEETING OBJECT\n  // // If meeting has no sequence, it means just initialized and will apply whatever in locus DTO\n  // if (isNewMeeting || !this.locus.sequence) {\n  //   meeting._updateWithDeltaLocus(deltaLocus, emitter);\n  //   meeting.locusDesync = false;\n  //   meeting.needToGetFullLocus = false;\n  //   return DELTAEVENT.GT;\n  // }\n\n  if (!deltaLocus.sequence) {\n    // TODO: force update\n  }\n\n  // TODO: If this was the first event, the client will not have a syncURL\n  // in its working copy to do a GET on. In this case clients should do a GET on locusUrl contained in the DTO\n\n  let res;\n  let resBase;\n  res = LocusUtil.compareLocus(deltaLocus.sequence, meeting.locusInfo.sequence);\n  // In-coming locus is greater than working copy, need to compare with base if there\n  // is base sequence except the first delta locus event\n  if (res === DELTAEVENT.GT && deltaLocus.baseSequence && meeting.locusInfo.syncUrl) {\n    resBase = LocusUtil.compareLocus(deltaLocus.baseSequence, meeting.locusInfo.sequence);\n    if (resBase === DELTAEVENT.LT || resBase === DELTAEVENT.CF) {\n      res = DELTAEVENT.CF;\n    }\n  }\n  // Special case for OBTP with meeting size equal or over 5. Locus might change this later\n  // This is a temporary fix. I will find a better solution later.\n  if (!deltaLocus.baseSequence && res === DELTAEVENT.EQ && deltaLocus.fullState.state === 'INITIALIZING'\n        && deltaLocus.sequence.rangeStart === 0 && deltaLocus.sequence.rangeEnd === 0\n        && deltaLocus.sequence.entries.length === 0) {\n    res = DELTAEVENT.GT;\n    console.log('Special case for OBTP');\n  }\n\n  console.log('RESULT :', res);\n  switch (res) {\n    case DELTAEVENT.LT:\n    case DELTAEVENT.EQ:\n      meeting.locusDesync = false;\n      meeting.needToGetFullLocus = false;\n      break;\n    case DELTAEVENT.CF:\n      LocusUtil.generateSyncDebugFlag(meeting, deltaLocus);\n      if (meeting.locusDesync) {\n        meeting.meetingRequest.getFullLocus({\n          desync: true,\n          locusUrl: meeting.locusUrl\n        }).then((res) => {\n          meeting.locusInfo.onFullLocus(res.body);\n        });\n      }\n      else {\n        meeting.locusDesync = true;\n        Parser.syncMeeting(meeting, deltaLocus);\n      }\n      break;\n    case DELTAEVENT.GT:\n      console.info('MeetingAmpstate#updateWithDeltaLocus: MeetingConstants.deltaLocusResult.GT');\n      meeting.locusInfo.onDeltaLocus(deltaLocus);\n      // Turn off desync in case this delta locus comes from a sync request\n      meeting.locusDesync = false;\n      meeting.needToGetFullLocus = false;\n      break;\n    default:\n  }\n  return res;\n};\n\n\nParser.syncMeeting = (meeting, deltaLocus) => {\n  if (meeting\n        && meeting.locusInfo\n        && meeting.locusInfo.syncUrl\n        && meeting.locusInfo.fullState\n        && meeting.locusInfo.fullState.state !== LOCUS.STATE.INACTIVE) {\n    // found that the locus syncs were happening even after 4 hrs of meeting\n    // completion, resulting in 403 errors. This check ensures we call\n    // syncing only if the locus state is not INACTIVE.\n    meeting.meetingRequest.syncMeeting({\n      syncUrl: deltaLocus.syncUrl,\n      desync: meeting.desync\n    })\n      .then((res) => {\n        meeting.locusInfo.onDeltaLocus(res.body);\n        // Parser.updateMeeting(res.body, meeting);\n        console.log(`meeting-adapter#syncMeeting: performing sync for uri: ${meeting.locusInfo.syncUrl} and state: ${meeting.locusInfo.fullState.state}`);\n      })\n      .catch((err) => {\n        console.error('Error syncing the locus', err);\n      });\n  }\n  else if (meeting && meeting.locusInfo && meeting.locusInfo.syncUrl && meeting.locusInfo.fullState) {\n    // TODO: remoev this later as meeting object wont be present\n    console.error(`meeting-adapter#syncMeeting: skip sync for url: ${meeting.locusInfo.syncUrl} and state: ${meeting.locusInfo.fullState.state}`);\n  }\n};\n\nexport default Parser;\n"]}