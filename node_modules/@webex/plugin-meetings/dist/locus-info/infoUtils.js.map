{"version":3,"sources":["infoUtils.js"],"names":["InfoUtils","parse","info","policy","parsePolicy","type","parseMeetingType","sipUri","displayHints","joined","length","forEach","key","UNKNOWN","locusTags","indexOf","ONE_ON_ONE","MEETING","webexServiceType","MEETING_CENTER","isPmr","WEBEX_MEETING"],"mappings":";;;;;;AACA;;AAEA,IAAMA,YAAY,EAAlB;;AAEAA,UAAUC,KAAV,GAAkB,UAACC,IAAD;AAAA,SAAW;AAC3BC,YAAQH,UAAUI,WAAV,CAAsBF,IAAtB,CADmB;AAE3BG,UAAML,UAAUM,gBAAV,CAA2BJ,IAA3B,CAFqB;AAG3BK,YAAQL,KAAKK;AAHc,GAAX;AAAA,CAAlB;AAKAP,UAAUI,WAAV,GAAwB,UAACF,IAAD,EAAU;AAChC,MAAMC,SAAS,EAAf;AACA;AACA,MAAID,KAAKM,YAAL,IAAqBN,KAAKM,YAAL,CAAkBC,MAAvC,IAAiDP,KAAKM,YAAL,CAAkBC,MAAlB,CAAyBC,MAAzB,GAAkC,CAAvF,EAA0F;AACxF;AACAR,SAAKM,YAAL,CAAkBC,MAAlB,CAAyBE,OAAzB,CAAiC,UAACC,GAAD,EAAS;AACxCT,aAAOS,GAAP,IAAc,IAAd;AACD,KAFD;AAGD;AACD,SAAOT,MAAP;AACD,CAVD;;AAYAH,UAAUM,gBAAV,GAA6B,UAACJ,IAAD,EAAU;AACrC,MAAIG,OAAOQ,kBAAX;AACA;AACA;AACA,MAAIX,KAAKY,SAAL,IAAkBZ,KAAKY,SAAL,CAAeC,OAAf,CAAuBC,qBAAvB,KAAsC,CAA5D,EAA+D;AAC7D,WAAOA,qBAAP;AACD;AACD,MAAId,KAAKY,SAAL,IAAkBZ,KAAKY,SAAL,CAAeC,OAAf,CAAuBE,kBAAvB,KAAmC,CAAzD,EAA4D;AAC1DZ,WAAOY,kBAAP;AACD;AACD;AACA,MAAIf,KAAKgB,gBAAL,KAA0BC,yBAA1B,IAA4CjB,KAAKkB,KAArD,EAA4D;AAC1D,WAAOC,wBAAP;AACD;AACD,SAAOhB,IAAP;AACD,CAfD;;kBAiBeL,S","file":"infoUtils.js","sourcesContent":["\nimport {ONE_ON_ONE, MEETING, MEETING_CENTER, WEBEX_MEETING, UNKNOWN} from '../constants';\n\nconst InfoUtils = {};\n\nInfoUtils.parse = (info) => ({\n  policy: InfoUtils.parsePolicy(info),\n  type: InfoUtils.parseMeetingType(info),\n  sipUri: info.sipUri\n});\nInfoUtils.parsePolicy = (info) => {\n  const policy = {};\n  // Parses the policy to show valid uses\n  if (info.displayHints && info.displayHints.joined && info.displayHints.joined.length > 0) {\n    // TODO: find a better way\n    info.displayHints.joined.forEach((key) => {\n      policy[key] = true;\n    });\n  }\n  return policy;\n};\n\nInfoUtils.parseMeetingType = (info) => {\n  let type = UNKNOWN;\n  // Parse all the value and get the type of meeting\n  // 1:1 meeting\n  if (info.locusTags && info.locusTags.indexOf(ONE_ON_ONE) >= 0) {\n    return ONE_ON_ONE;\n  }\n  if (info.locusTags && info.locusTags.indexOf(MEETING) >= 0) {\n    type = MEETING;\n  }\n  // For webex meeting claimed or unclaimed or calender meeting with webex site\n  if (info.webexServiceType === MEETING_CENTER || info.isPmr) {\n    return WEBEX_MEETING;\n  }\n  return type;\n};\n\nexport default InfoUtils;\n"]}