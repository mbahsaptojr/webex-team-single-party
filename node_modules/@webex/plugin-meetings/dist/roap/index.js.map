{"version":3,"sources":["index.js"],"names":["Roap","attrs","options","roapHandler","RoapHandler","roapRequest","RoapRequest","lastRoapOffer","Events","on","EVENTS","ROAP_OK","sendRoapOK","bind","ROAP_ANSWER","sendRoapAnswer","data","msg","message","correlationId","console","log","submit","type","ROAP","RECEIVE_ROAP_MSG","seq","RECEIVE_CALL_LEAVE","resolve","then","meeting","MeetingCollection","get","roapMessage","messageType","ROAP_TYPES","OK","version","ROAP_VERSION","sendRoap","locusId","locusSelfId","mediaId","audioMuted","isAudioMuted","videoMuted","isVideoMuted","SEND_ROAP_MSG","setRoapSeq","ANSWER","sdps","session","locus","errorType","ERROR","OFFER","roapSeq","parseFloat","tieBreaker","selfId","SEND_ROAP_MSG_SUCCESS","StatelessSparkPlugin"],"mappings":"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","file":"index.js","sourcesContent":["import {StatelessSparkPlugin} from '@ciscospark/spark-core';\n\nimport {ROAP, EVENTS} from '../constants';\nimport MeetingCollection from '../meetings/collection';\nimport Events from '../events';\n\nimport RoapHandler from './handler';\nimport RoapRequest from './request';\n/**\n * @class Roap\n */\nexport default class Roap extends StatelessSparkPlugin {\n  /**\n   *\n   * @param {Object} attrs\n   * @param {Object} options\n   */\n  constructor(attrs, options) {\n    super({}, options);\n\n    this.roapHandler = new RoapHandler({}, options);\n    this.roapRequest = new RoapRequest({}, options);\n    this.lastRoapOffer = {};\n\n    Events.on(EVENTS.ROAP_OK, this.sendRoapOK.bind(this));\n    Events.on(EVENTS.ROAP_ANSWER, this.sendRoapAnswer.bind(this));\n  }\n\n  /**\n   * Starts listening to mercury events for Roap messages\n   * @param {object} data event object\n   * @returns {Promise}\n   */\n  roapEvent(data) {\n    const msg = data.message;\n    const {correlationId} = data;\n    console.log(`Call-Mercury->-App: receives Roap Message [${JSON.stringify(msg, null, 2)}]`);\n    this.roapHandler.submit({\n      type: ROAP.RECEIVE_ROAP_MSG,\n      msg,\n      correlationId\n    });\n  }\n\n  /**\n   *\n   * @param {String} correlationId correlation id of a meeting\n   * @param {Number} seq ROAP sequence number\n   * @returns {Promise}\n   */\n  stop(correlationId, seq) {\n    this.roapHandler.submit({\n      type: ROAP.RECEIVE_CALL_LEAVE,\n      seq,\n      correlationId\n    });\n\n    return Promise.resolve();\n  }\n\n  /**\n   *\n   * @param {Object} options\n   * @returns {null}\n   */\n  sendRoapOK(options) {\n    return Promise.resolve().then(() => {\n      const meeting = MeetingCollection.get(options.correlationId);\n\n      const roapMessage = {\n        messageType: ROAP.ROAP_TYPES.OK,\n        version: ROAP.ROAP_VERSION,\n        seq: options.seq\n      };\n\n      console.log('ROAP:sendRoapOK ', options.seq);\n      return this.roapRequest\n        .sendRoap({\n          roapMessage,\n          locusId: options.locusId,\n          locusSelfId: options.locusSelfId,\n          mediaId: options.mediaId,\n          correlationId: options.correlationId,\n          audioMuted: meeting.isAudioMuted(),\n          videoMuted: meeting.isVideoMuted()\n        })\n        .then(() => {\n          this.roapHandler.submit({\n            type: ROAP.SEND_ROAP_MSG,\n            msg: roapMessage,\n            correlationId: options.correlationId\n          });\n          console.log('ROAP:sendRoapOK out', options.seq);\n          meeting.setRoapSeq(options.seq);\n        });\n    });\n  }\n\n  // eslint-disable-next-line no-warning-comments\n  // TODO: try to merge sendRoapOk and roapAnswer\n  /**\n   * Sends a ROAP answer...\n   * @param {Object} options\n   * @returns {Promise}\n   */\n  sendRoapAnswer(options) {\n    const meeting = MeetingCollection.get(options.correlationId);\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.ANSWER,\n      sdps: options.sdps,\n      version: ROAP.ROAP_VERSION,\n      seq: options.seq\n    };\n    return this.roapRequest\n      .sendRoap({\n        roapMessage,\n        locusId: options.locusId,\n        locusSelfId: options.locusSelfId,\n        mediaId: options.mediaId,\n        correlationId: options.correlationId,\n        audioMuted: options.audioMuted,\n        videoMuted: options.videoMuted\n      })\n      .then(() => {\n        meeting.setRoapSeq(options.seq);\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG,\n          msg: roapMessage,\n          correlationId: options.correlationId\n        });\n      });\n  }\n\n  /**\n   * Sends a ROAP error...\n   * @param {Object} session\n   * @param {Object} locus\n   * @param {String} errorType\n   * @returns {Promise}\n   */\n  sendRoapError(session, locus, errorType) {\n    const msg = {\n      messageType: ROAP.ROAP_TYPES.ERROR,\n      version: ROAP.ROAP_VERSION,\n      errorType,\n      seq: session.OFFER.seq\n    };\n\n    return this.roapRequest.sendRoap(msg, locus);\n  }\n\n  /**\n   * sends a roap media request\n   * @param {Object} options\n   * @returns {Promise}\n   */\n  sendRoapMediaRequest(options) {\n    const {meeting} = options;\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.OFFER,\n      sdps: options.sdps,\n      version: ROAP.ROAP_VERSION,\n      seq: typeof options.roapSeq !== 'number' && Number.isNaN(parseFloat(options.roapSeq)) ? 0 : options.roapSeq + 1,\n      tieBreaker: 4294967294 // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n    };\n\n    this.roapHandler.submit({\n      type: ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: meeting.correlationId\n    });\n\n    return this.roapRequest\n      .sendRoap({\n        roapMessage,\n        correlationId: meeting.correlationId,\n        locusId: meeting.locusId,\n        locusSelfId: meeting.selfId, // locusSelfId ???\n        mediaId: meeting.mediaId,\n        audioMuted: meeting.isAudioMuted(),\n        videoMuted: meeting.isVideoMuted()\n      })\n      .then((locus) => {\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId\n        });\n        meeting.setRoapSeq(roapMessage.seq);\n        // eslint-disable-next-line no-warning-comments\n        // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n        return locus;\n        // eslint-disable-next-line no-warning-comments\n        // TODO: check where to update the sequence number\n      });\n  }\n}\n"]}