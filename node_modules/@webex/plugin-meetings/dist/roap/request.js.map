{"version":3,"sources":["request.js"],"names":["RoapRequest","localSdp","reachabilityData","window","localStorage","getItem","REACHABILITY","reachabilityResult","JSON","parse","length","reachability","e","console","error","options","logger","info","roapMessage","resolve","then","deviceUrl","spark","internal","device","url","body","usingResource","resourceId","correlationId","localMedias","attachRechabilityData","audioMuted","videoMuted","locusUrl","PARTICIPANT","sipUrl","services","locusServiceUrl","LOCI","CALL","invitee","address","sipTarget","Error","request","method","POST","uri","res","locus","roapSeq","seq","id","split","pop","fullState","lastActive","catch","err","locusId","locusSelfId","mediaId","mediaUrl","MEDIA","messageType","api","API","LOCUS","resource","PUT","audioVideo","mediaConnection","mediaConnections","statusCode","StatelessSparkPlugin"],"mappings":"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","file":"request.js","sourcesContent":["\n/* global window */\nimport {StatelessSparkPlugin} from '@ciscospark/spark-core';\n\nimport {PARTICIPANT, LOCI, CALL, POST, MEDIA, PUT, API, REACHABILITY} from '../constants';\n/**\n * @class RoapRequest\n */\nexport default class RoapRequest extends StatelessSparkPlugin {\n  /**\n   * Joins a meeting via ROAP\n   * @param {Object} options\n   * @returns {Promise} returns a promise that resolves/rejects whatever the request does\n   */\n\n\n  attachRechabilityData(localSdp) {\n    const reachabilityData = window.localStorage.getItem(REACHABILITY.localStorage);\n    if (reachabilityData) {\n      try {\n        const reachabilityResult = JSON.parse(reachabilityData);\n        /* istanbul ignore else */\n        if (reachabilityResult && Object.keys(reachabilityResult).length) {\n          localSdp.reachability = reachabilityResult;\n        }\n      }\n      catch (e) {\n        console.error(`Exception in parsing reachability data : ${e}`);\n      }\n    }\n\n    return localSdp;\n  }\n\n  joinMeetingWithRoap(options) {\n    this.logger.info('Call->Locus: Join locus with roap');\n    this.logger.info('Call-local SDP', options.roapMessage);\n\n    return Promise.resolve().then(() => {\n      const deviceUrl = this.spark.internal.device.url;\n      let url = '';\n\n      const body = {\n        deviceUrl,\n        usingResource: options.resourceId || null,\n        correlationId: options.correlationId,\n        localMedias: [\n          {\n            localSdp: JSON.stringify(this.attachRechabilityData({\n              roapMessage: options.roapMessage,\n              audioMuted: false,\n              videoMuted: false\n            }))\n          }\n        ]\n      };\n\n      if (options.locusUrl) {\n        url = `${options.locusUrl}/${PARTICIPANT}`;\n      }\n      else if (options.sipUrl) {\n        url = `${this.spark.internal.device.services.locusServiceUrl}/${LOCI}/${CALL}`;\n        body.invitee = {\n          address: options.sipTarget\n        };\n      }\n      else {\n        throw new Error('Must provide a locusUrl or sipTarget');\n      }\n\n      return this.spark\n        .request({\n          method: POST,\n          uri: url,\n          body\n        })\n        .then((res) => {\n          const {locus} = res.body;\n          locus.roapSeq = options.roapMessage.seq;\n          locus.id = locus.url.split('/').pop();\n          this.logger.info(`Call-Locus->App: Joined locus [${locus.id}][${locus.fullState.lastActive}]`);\n          return locus;\n        })\n        .catch((err) => {\n          this.logger.error('MeetingAdapter#joinMeetingWithRoap failed', err);\n          throw err;\n        });\n    });\n  }\n\n  /**\n   * Sends a ROAP message\n   * @param {Object} options\n   * @param {String} options.roapMessage\n   * @param {String} options.locusId\n   * @param {String} options.locusSelfId\n   * @param {String} options.mediaId\n   * @param {String} options.correlationId\n   * @returns {Promise} returns the response/failure of the request\n   */\n  sendRoap(options) {\n    const {\n      roapMessage, locusId, locusSelfId, mediaId, correlationId\n    } = options;\n\n    if (!mediaId) {\n      this.logger.info('Race Condition /call mediaID not present');\n    }\n\n    const mediaUrl = `${LOCI}/${locusId}/${PARTICIPANT}/${locusSelfId}/${MEDIA}`;\n    const deviceUrl = this.spark.internal.device.url;\n\n    this.logger.info(`Call-sendRoap: ${mediaUrl} \\n ${roapMessage.messageType} \\n seq:${roapMessage.seq}`);\n\n    return this.spark\n      .request({\n        api: API.LOCUS,\n        resource: mediaUrl,\n        method: PUT,\n        body: {\n          deviceUrl,\n          correlationId,\n          localMedias: [\n            {\n              localSdp: JSON.stringify(this.attachRechabilityData({\n                roapMessage,\n                // eslint-disable-next-line no-warning-comments\n                // TODO: check whats the need for video and audiomute\n                audioMuted: !!options.audioMuted,\n                videoMuted: !!options.audioVideo\n              })),\n              mediaId: options.mediaId\n            }\n          ]\n        }\n      })\n      .then((res) => {\n        // always it will be the first mediaConnection Object\n        const mediaConnection\n          = res.body.mediaConnections && res.body.mediaConnections.length > 0 && res.body.mediaConnections[0];\n        this.logger.info(\n          `Call-sendRoap:response:${JSON.stringify(mediaConnection, null, 2)}'\\n StatusCode:'${res.statusCode}`\n        );\n        const {locus} = res.body;\n        locus.roapSeq = options.roapMessage.seq;\n        return locus;\n      })\n      .catch((err) => {\n        this.logger.error(`Call-sendRoap Error:${JSON.stringify(err, null, 2)}`);\n        this.logger.error(\n          `Call-sendRoap errorBody:${JSON.stringify(roapMessage, null, 2)} + '\\\\n mediaId:'${options.mediaId}`\n        );\n        throw err;\n      });\n  }\n}\n"]}