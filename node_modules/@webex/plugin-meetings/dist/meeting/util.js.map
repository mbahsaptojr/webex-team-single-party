{"version":3,"sources":["util.js"],"names":["MeetingUtil","parseLocusJoin","response","parsed","locus","body","mediaConnections","locusUrl","url","locusId","split","pop","selfId","self","id","forEach","mediaConnection","mediaId","getLocusPartner","participants","find","participant","identity","length","type","USER","removed","partner","remoteUpdateAudioVideo","audio","video","meeting","reject","Error","localMedias","Media","generateLocalMedias","meetingRequest","remoteAudioVideoToggle","deviceUrl","correlationId","leaveMeeting","resourceId","cleanOptions","options","info","owner","userId","hasOwner","isOwnerSelf","hostPin","moderator","MODERATOR_TRUE","MODERATOR_FALSE","isPinOrGuest","err","errorCode","INTENT_TO_JOIN","joinMeeting","sipUri","then","res","getSdps","sdps","mediaProperties","mediaPeerConnection","push","sdp","sharePeerConnection"],"mappings":"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","file":"util.js","sourcesContent":["import {isEmpty} from 'lodash';\n\nimport Media from '../media';\nimport {USER, INTENT_TO_JOIN, MODERATOR_TRUE, MODERATOR_FALSE} from '../constants';\n\nconst MeetingUtil = {};\n\nMeetingUtil.parseLocusJoin = (response) => {\n  const parsed = {};\n  // First todo: add check for existance\n  parsed.locus = response.body.locus;\n  parsed.mediaConnections = response.body.mediaConnections;\n  parsed.locusUrl = parsed.locus.url;\n  parsed.locusId = parsed.locus.url.split('/').pop();\n  parsed.selfId = parsed.locus.self.id;\n\n  // we need mediaId before making roap calls\n  parsed.mediaConnections.forEach((mediaConnection) => {\n    if (mediaConnection.mediaId) {\n      parsed.mediaId = mediaConnection.mediaId;\n    }\n  });\n  return parsed;\n};\n\nMeetingUtil.getLocusPartner = (participants, self) => participants.find((participant) =>\n  (self && participant.identity !== self.identity)\n    && (participants.length <= 2 || (participant.type === USER && !participant.removed))) || this.partner;\n\nMeetingUtil.remoteUpdateAudioVideo = (audio, video, meeting) => {\n  if (!meeting) {\n    return Promise.reject(new Error('You need a meeting object.'));\n  }\n  const localMedias = Media.generateLocalMedias(meeting.mediaId, audio, video);\n  if (isEmpty(localMedias)) {\n    return Promise.reject(new Error('You need a media id on the meeting to change remote audio.'));\n  }\n  return meeting.meetingRequest.remoteAudioVideoToggle({\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    localMedias,\n    deviceUrl: meeting.deviceUrl,\n    correlationId: meeting.correlationId\n  });\n};\n\nMeetingUtil.leaveMeeting = (meeting) => {\n  if (!meeting) {\n    return Promise.reject(new Error('You need a meeting object.'));\n  }\n  return meeting.meetingRequest.leaveMeeting({\n    locusUrl: meeting.locusUrl,\n    selfId: meeting.selfId,\n    correlationId: meeting.correlationId,\n    resourceId: null,\n    deviceUrl: meeting.deviceUrl\n  });\n};\n\n// TODO: have locus ignore hostPin if they find out it's my claimed PMR\n/*\nfor my claimed PMR\npassing an \"undefined\" hostPin was causing the issue.\nif I don't include hostPin in the first request, locus figures out it's my PMR\nand sends a 200 after the first request\nso we must clean up the hostPin to stop the double request\n*/\nMeetingUtil.cleanOptions = (options, info, owner, userId) => {\n  if (MeetingUtil.hasOwner(info)) {\n    if (MeetingUtil.isOwnerSelf(owner, userId)) {\n      if (options.hostPin) {\n        delete options.hostPin;\n      }\n      options.moderator = MODERATOR_TRUE;\n    }\n    else {\n      options.moderator = MODERATOR_FALSE;\n    }\n  }\n  return options;\n};\n\nMeetingUtil.hasOwner = (info) => info && info.owner;\n\nMeetingUtil.isOwnerSelf = (owner, selfId) => owner === selfId;\n\nMeetingUtil.isPinOrGuest = (err) => {\n  if (err && err.body && err.body.errorCode === INTENT_TO_JOIN) {\n    return true;\n  }\n  return false;\n};\n\nMeetingUtil.joinMeeting = (meeting, options) => {\n  if (!meeting) {\n    return Promise.reject(new Error('You need a meeting object.'));\n  }\n  // eslint-disable-next-line no-warning-comments\n  // TODO: check if the meeting is in JOINING state\n  // if Joining state termintate the request as user might click multiple times\n  return meeting.meetingRequest\n    .joinMeeting({\n      sipUri: meeting.sipUri,\n      deviceUrl: meeting.deviceUrl,\n      locusUrl: meeting.locusUrl,\n      correlationId: meeting.id,\n      resourceId: meeting.resourceId,\n      moderator: options.moderator,\n      hostPin: options.hostPin\n    })\n    .then((res) => MeetingUtil.parseLocusJoin(res));\n};\n\nMeetingUtil.getSdps = (meeting) => {\n  const sdps = [];\n\n  if (meeting.mediaProperties.mediaPeerConnection) {\n    sdps.push(meeting.mediaProperties.mediaPeerConnection.sdp);\n  }\n\n  if (meeting.mediaProperties.sharePeerConnection) {\n    sdps.push(meeting.mediaProperties.sharePeerConnection.sdp);\n  }\n\n  return sdps;\n};\n\nexport default MeetingUtil;\n"]}