{"version":3,"sources":["util.js"],"names":["MemberUtil","isUser","participant","type","USER","isGuest","guest","isDevice","RESOURCE_ROOM","isSame","id","person","isAssociatedSame","associatedUsers","some","user","isNotAdmitted","status","devices","intent","WAIT","IN_LOBBY","isAudioMuted","Error","mutedStatus","isMuted","AUDIO_STATUS","controls","audio","muted","isVideoMuted","VIDEO_STATUS","accessor","RECEIVE_ONLY","SEND_RECEIVE","isRecording","localRecord","recording","extractStatus","length","NOT_IN_MEETING","device","state","JOINED","NONE","IN_MEETING","IDLE","OBSERVE","LEFT","extractId","extractName","name"],"mappings":"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","file":"util.js","sourcesContent":["import {\n  USER,\n  RESOURCE_ROOM,\n  OBSERVE,\n  NONE,\n  WAIT,\n  LEFT,\n  JOINED,\n  IDLE,\n  IN_LOBBY,\n  NOT_IN_MEETING,\n  IN_MEETING,\n  AUDIO_STATUS,\n  VIDEO_STATUS,\n  SEND_RECEIVE,\n  RECEIVE_ONLY\n} from '../constants';\n\nconst MemberUtil = {};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isUser = (participant) => participant && participant.type === USER;\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isGuest = (participant) => participant && participant.guest;\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isDevice = (participant) => participant && participant.type === RESOURCE_ROOM;\n\n/**\n * checks to see if the participant id is the same as the passed id\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\nMemberUtil.isSame = (participant, id) => participant\n  && (participant.id === id || participant.person && participant.person.id === id);\n\n/**\n * checks to see if the participant id is the same as the passed id for associated devices\n * there are multiple ids that can be used\n * @param {Object} participant the locus participant\n * @param {String} id\n * @returns {Boolean}\n */\nMemberUtil.isAssociatedSame = (participant, id) => participant\n&& participant.associatedUsers\n&& participant.associatedUsers.some((user) => (user.id === id || user.person && user.person.id === id));\n\n/**\n * @param {Object} participant the locus participant\n * @param {Boolean} isGuest\n * @param {String} status\n * @returns {Boolean}\n */\nMemberUtil.isNotAdmitted = (participant, isGuest, status) => participant\n  && participant.guest && participant.devices && participant.devices[0]\n  && participant.devices[0].intent && participant.devices[0].intent.type === WAIT\n  && isGuest && status === IN_LOBBY;\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isAudioMuted = (participant) => {\n  if (!participant) {\n    throw new Error('Audio could not be processed, participant is undefined.');\n  }\n  const mutedStatus = MemberUtil.isMuted(participant.status, AUDIO_STATUS);\n  if (participant.controls && participant.controls.audio) {\n    if (participant.controls.audio.muted) {\n      return true;\n    }\n    if (mutedStatus) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isVideoMuted = (participant) => {\n  if (!participant) {\n    throw new Error('Video could not be processed, participant is undefined.');\n  }\n  return MemberUtil.isMuted(participant.status, VIDEO_STATUS);\n};\n\n/**\n * utility method for audio/video muted status\n * @param {String} status\n * @param {String} accessor\n * @returns {Boolean}\n */\nMemberUtil.isMuted = (status, accessor) => {\n  if (status) {\n    if (status[accessor] === RECEIVE_ONLY) {\n      return true;\n    }\n    if (status[accessor] === SEND_RECEIVE) {\n      return false;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {Boolean}\n */\nMemberUtil.isRecording = (participant) => {\n  if (!participant) {\n    throw new Error('Recording could not be processed, participant is undefined.');\n  }\n  if (participant.controls && participant.controls.localRecord) {\n    return participant.controls.localRecord.recording;\n  }\n  return false;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractStatus = (participant) => {\n  if (!(participant && participant.devices && participant.devices.length)) {\n    return NOT_IN_MEETING;\n  }\n  const device = participant && participant.devices ? participant.devices[0] : null;\n  if (device) {\n    if (device.state === JOINED && (!device.intent || device.intent.type === NONE)) {\n      return IN_MEETING;\n    }\n    if (device.state === IDLE && device.intent && (device.intent.type === WAIT || device.intent.type === OBSERVE)) {\n      return IN_LOBBY;\n    }\n    if (device.state === LEFT || (device.state === IDLE && (!device.intent || device.intent.type === NONE))) {\n      return NOT_IN_MEETING;\n    }\n  }\n  return NOT_IN_MEETING;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractId = (participant) => {\n  if (participant) {\n    return participant.id;\n  }\n  return null;\n};\n\n/**\n * @param {Object} participant the locus participant\n * @returns {String}\n */\nMemberUtil.extractName = (participant) => {\n  if (participant && participant.person) {\n    return participant.person.name;\n  }\n  return null;\n};\n\nexport default MemberUtil;\n"]}